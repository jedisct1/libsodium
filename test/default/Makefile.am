
EXTRA_DIST = \
	cmptest.h \
	test_enclave.h \
	enclave_private.pem \
	enclave_config.xml \
	enclave.edl \
	wintest.bat \
	pre.js.inc \
	aead_aes256gcm.exp \
	aead_chacha20poly1305.exp \
	aead_xchacha20poly1305.exp \
	auth.exp \
	auth2.exp \
	auth3.exp \
	auth5.exp \
	auth6.exp \
	auth7.exp \
	box.exp \
	box2.exp \
	box7.exp \
	box8.exp \
	box_easy.exp \
	box_easy2.exp \
	box_seal.exp \
	box_seed.exp \
	chacha20.exp \
	codecs.exp \
	core_ed25519.exp \
	core1.exp \
	core2.exp \
	core3.exp \
	core4.exp \
	core5.exp \
	core6.exp \
	ed25519_convert.exp \
	generichash.exp \
	generichash2.exp \
	generichash3.exp \
	hash.exp \
	hash2.exp \
	hash3.exp \
	kdf.exp \
	keygen.exp \
	kx.exp \
	metamorphic.exp \
	misuse.exp \
	onetimeauth.exp \
	onetimeauth2.exp \
	onetimeauth7.exp \
	pwhash_argon2i.exp \
	pwhash_argon2id.exp \
	pwhash_scrypt.exp \
	pwhash_scrypt_ll.exp \
	randombytes.exp \
	scalarmult.exp \
	scalarmult_ed25519.exp \
	scalarmult2.exp \
	scalarmult5.exp \
	scalarmult6.exp \
	scalarmult7.exp \
	secretbox.exp \
	secretbox2.exp \
	secretbox7.exp \
	secretbox8.exp \
	secretbox_easy.exp \
	secretbox_easy2.exp \
	secretstream.exp \
	shorthash.exp \
	sign.exp \
	siphashx24.exp \
	sodium_core.exp \
	sodium_utils.exp \
	sodium_utils2.exp \
	sodium_utils3.exp \
	sodium_version.exp \
	stream.exp \
	stream2.exp \
	stream3.exp \
	stream4.exp \
	verify1.exp \
	xchacha20.exp

DISTCLEANFILES = \
	aead_aes256gcm.res \
	aead_chacha20poly1305.res \
	aead_xchacha20poly1305.res \
	auth.res \
	auth2.res \
	auth3.res \
	auth5.res \
	auth6.res \
	auth7.res \
	box.res \
	box2.res \
	box7.res \
	box8.res \
	box_easy.res \
	box_easy2.res \
	box_seal.res \
	box_seed.res \
	chacha20.res \
	codecs.res \
	core_ed25519.res \
	core1.res \
	core2.res \
	core3.res \
	core4.res \
	core5.res \
	core6.res \
	ed25519_convert.res \
	generichash.res \
	generichash2.res \
	generichash3.res \
	hash.res \
	hash2.res \
	hash3.res \
	kdf.res \
	keygen.res \
	kx.res \
	metamorphic.res \
	misuse.res \
	onetimeauth.res \
	onetimeauth2.res \
	onetimeauth7.res \
	pwhash_argon2i.res \
	pwhash_argon2id.res \
	pwhash_scrypt.res \
	pwhash_scrypt_ll.res \
	randombytes.res \
	scalarmult.res \
	scalarmult_ed25519.res \
	scalarmult2.res \
	scalarmult5.res \
	scalarmult6.res \
	scalarmult7.res \
	secretbox.res \
	secretbox2.res \
	secretbox7.res \
	secretbox8.res \
	secretbox_easy.res \
	secretbox_easy2.res \
	secretstream.res \
	shorthash.res \
	sign.res \
	siphashx24.res \
	sodium_core.res \
	sodium_utils.res \
	sodium_utils2.res \
	sodium_utils3.res \
	sodium_version.res \
	stream.res \
	stream2.res \
	stream3.res \
	stream4.res \
	verify1.res \
	xchacha20.res

if NATIVECLIENT
CLEANFILES = \
	aead_aes256gcm.final \
	aead_chacha20poly1305.final \
	aead_xchacha20poly1305.final \
	auth.final \
	auth2.final \
	auth3.final \
	auth5.final \
	auth6.final \
	auth7.final \
	box.final \
	box2.final \
	box7.final \
	box8.final \
	box_easy.final \
	box_easy2.final \
	box_seal.final \
	box_seed.final \
	chacha20.final \
	codecs.final \
	core_ed25519.final \
	core1.final \
	core2.final \
	core3.final \
	core4.final \
	core5.final \
	core6.final \
	ed25519_convert.final \
	generichash.final \
	generichash2.final \
	generichash3.final \
	hash.final \
	hash2.final \
	hash3.final \
	kdf.final \
	keygen.final \
	kx.final \
	metamorphic.final \
	misuse.final \
	onetimeauth.final \
	onetimeauth2.final \
	onetimeauth7.final \
	pwhash_argon2i.final \
	pwhash_argon2id.final \
	pwhash_scrypt.final \
	pwhash_scrypt_ll.final \
	randombytes.final \
	scalarmult.final \
	scalarmult_ed25519.final \
	scalarmult2.final \
	scalarmult5.final \
	scalarmult6.final \
	scalarmult7.final \
	secretbox.final \
	secretbox2.final \
	secretbox7.final \
	secretbox8.final \
	secretbox_easy.final \
	secretbox_easy2.final \
	secretstream.final \
	shorthash.final \
	sign.final \
	siphashx24.final \
	sodium_core.final \
	sodium_utils.final \
	sodium_version.final \
	stream.final \
	stream2.final \
	stream3.final \
	stream4.final \
	verify1.final \
	xchacha20.final \
	aead_aes256gcm.nexe \
	aead_chacha20poly1305.nexe \
	aead_xchacha20poly1305.nexe \
	auth.nexe \
	auth2.nexe \
	auth3.nexe \
	auth5.nexe \
	auth6.nexe \
	auth7.nexe \
	box.nexe \
	box2.nexe \
	box7.nexe \
	box8.nexe \
	box_easy.nexe \
	box_easy2.nexe \
	box_seal.nexe \
	box_seed.nexe \
	chacha20.nexe \
	codecs.nexe \
	core_ed25519.nexe \
	core1.nexe \
	core2.nexe \
	core3.nexe \
	core4.nexe \
	core5.nexe \
	core6.nexe \
	ed25519_convert.nexe \
	generichash.nexe \
	generichash2.nexe \
	generichash3.nexe \
	hash.nexe \
	hash2.nexe \
	hash3.nexe \
	kdf.nexe \
	keygen.nexe \
	kx.nexe \
	metamorphic.nexe \
	misuse.nexe \
	onetimeauth.nexe \
	onetimeauth2.nexe \
	onetimeauth7.nexe \
	pwhash_argon2i.nexe \
	pwhash_argon2id.nexe \
	pwhash_scrypt.nexe \
	pwhash_scrypt_ll.nexe \
	randombytes.nexe \
	scalarmult.nexe \
	scalarmult_ed25519.nexe \
	scalarmult2.nexe \
	scalarmult5.nexe \
	scalarmult6.nexe \
	scalarmult7.nexe \
	secretbox.nexe \
	secretbox2.nexe \
	secretbox7.nexe \
	secretbox8.nexe \
	secretbox_easy.nexe \
	secretbox_easy2.nexe \
	secretstream.nexe \
	shorthash.nexe \
	sign.nexe \
	siphashx24.nexe \
	sodium_core.nexe \
	sodium_utils.nexe \
	sodium_version.nexe \
	stream.nexe \
	stream2.nexe \
	stream3.nexe \
	stream4.nexe \
	verify1.nexe \
	xchacha20.nexe
endif

AM_CPPFLAGS = \
	-DTEST_SRCDIR=\"@srcdir@\" \
	-I$(top_srcdir)/src/libsodium/include \
	-I$(top_srcdir)/src/libsodium/include/sodium \
	-I$(top_builddir)/src/libsodium/include \
	-I$(top_builddir)/src/libsodium/include/sodium \
	-I$(top_srcdir)/test/quirks

if SGX
AM_CPPFLAGS += $(SGX_CPPFLAGS)
endif

AM_LDFLAGS = @TEST_LDFLAGS@

TESTS_TARGETS = \
	aead_aes256gcm \
	aead_chacha20poly1305 \
	aead_xchacha20poly1305 \
	auth \
	auth2 \
	auth3 \
	auth5 \
	auth6 \
	auth7 \
	box \
	box2 \
	box7 \
	box8 \
	box_easy \
	box_easy2 \
	box_seal \
	box_seed \
	chacha20 \
	codecs \
	core1 \
	core2 \
	core3 \
	core4 \
	core5 \
	core6 \
	ed25519_convert \
	generichash \
	generichash2 \
	generichash3 \
	hash \
	hash3 \
	kdf \
	keygen \
	kx \
	metamorphic \
	misuse \
	onetimeauth \
	onetimeauth2 \
	onetimeauth7 \
	pwhash_argon2i \
	pwhash_argon2id \
	randombytes \
	scalarmult \
	scalarmult2 \
	scalarmult5 \
	scalarmult6 \
	scalarmult7 \
	secretbox \
	secretbox2 \
	secretbox7 \
	secretbox8 \
	secretbox_easy \
	secretbox_easy2 \
	secretstream \
	shorthash \
	sign \
	sodium_core \
	sodium_utils \
	sodium_version \
	stream \
	stream2 \
	stream3 \
	stream4 \
	verify1

# if !SGX

if !EMSCRIPTEN
if !NATIVECLIENT
TESTS_TARGETS += \
	sodium_utils2 \
	sodium_utils3
endif
endif

if !MINIMAL
TESTS_TARGETS += \
	core_ed25519 \
	pwhash_scrypt \
	pwhash_scrypt_ll \
	scalarmult_ed25519 \
	siphashx24 \
	xchacha20
endif

if SGX
ENCLAVES = $(TESTS_TARGETS:%=%_enclave.signed.so)
UNSIG_ENCLAVES = $(TESTS_TARGETS:%=%_enclave.so)

SGX_CLEANFILES = $(ENCLAVES) $(UNSIG_ENCLAVES) \
    enclave_t.c \
    enclave_t.h \
    enclave_u.c \
    enclave_u.h 
    
if NATIVECLIENT
    CLEANFILES += $(SGX_CLEANFILES)
else
    CLEANFILES = $(SGX_CLEANFILES)
endif

endif

check_PROGRAMS = $(TESTS_TARGETS) 
check_SCRIPTS = $(ENCLAVES)

TESTS = $(TESTS_TARGETS)

if !SGX
TESTS_LDADD = \
	${top_builddir}/src/libsodium/libsodium.la
TESTS_CPPFLAGS = $(AM_CPPFLAGS)
else

SGX_EDGER8R := sgx_edger8r
SGX_ENCLAVE_SIGNER := sgx_sign

SGX_LIBRARY_PATH := $(SGX_SDK)/lib64

enclave_private.pem:

enclave_config.xml:

enclave.edl:

enclave_t.c enclave_t.h: enclave.edl
	$(SGX_EDGER8R) --use-prefix --trusted enclave.edl --search-path $(SGX_SDK)/include

enclave_u.c enclave_u.h: enclave.edl
	$(SGX_EDGER8R) --use-prefix --untrusted enclave.edl --search-path $(SGX_SDK)/include


ifneq ($(SGX_MODE), HW)
 Trts_Library_Name := sgx_trts_sim
 Service_Library_Name := sgx_tservice_sim
 Urts_Library_Name := sgx_urts_sim
 Uae_Service_Library_Name := sgx_uae_service_sim
else
 Trts_Library_Name := sgx_trts
 Service_Library_Name := sgx_tservice
 Urts_Library_Name := sgx_urts
 Uae_Service_Library_Name := sgx_uae_service
endif

Crypto_Library_Name := sgx_tcrypto

ENCLAVE_LINK_FLAGS := -Wl,--no-undefined -nostdlib -nodefaultlibs -nostartfiles -L$(SGX_LIBRARY_PATH) \
	-Wl,--whole-archive -l$(Trts_Library_Name) -Wl,--no-whole-archive \
	-Wl,--start-group -lsgx_tstdc -l$(Crypto_Library_Name) -l$(Service_Library_Name) -Wl,-Bstatic -Wl,--end-group \
	-Wl,-Bstatic -Wl,-Bsymbolic -Wl,--no-undefined \
	-Wl,-pie,-eenclave_entry -Wl,--export-dynamic  \
	-Wl,--defsym,__ImageBase=0 -Wl,--gc-sections

SUFFIXES = .signed.so .so _enclave.so

.so.signed.so:
	@echo "  SIGN    " $@
	@$(SGX_ENCLAVE_SIGNER) sign -key enclave_private.pem -enclave $< -out $@ -config enclave_config.xml 1> /dev/null

.o_enclave.so: 
	@echo "  CC      " $@
	@$(CC) $^ -o $@ $(CFLAGS) $(AM_CPPFLAGS) $(SGX_CPPFLAGS) $(ENCLAVE_LINK_FLAGS)

$(UNSIG_ENCLAVES) : ${top_builddir}/src/libsodium/.libs/libsodium.a test_enclave.h enclave_t.h enclave_t.o

$(ENCLAVES) :  enclave_private.pem enclave_config.xml 

TESTS_CPPFLAGS = -I$(SGX_SDK)/include
TESTS_LINK_FLAGS = -L$(SGX_LIBRARY_PATH)  -l$(Uae_Service_Library_Name) -l$(Urts_Library_Name) -lpthread
endif 


if SGX
TEST_APP_SOURCE = enclave_u.h enclave_u.c test_app.c

aead_aes256gcm_SOURCES          = $(TEST_APP_SOURCE)
aead_chacha20poly1305_SOURCES   = $(TEST_APP_SOURCE)
aead_xchacha20poly1305_SOURCES  = $(TEST_APP_SOURCE)
auth_SOURCES                    = $(TEST_APP_SOURCE)
auth2_SOURCES                   = $(TEST_APP_SOURCE)
auth3_SOURCES                   = $(TEST_APP_SOURCE)
auth5_SOURCES                   = $(TEST_APP_SOURCE)
auth6_SOURCES                   = $(TEST_APP_SOURCE)
auth7_SOURCES                   = $(TEST_APP_SOURCE)
box_SOURCES                     = $(TEST_APP_SOURCE)
box2_SOURCES                    = $(TEST_APP_SOURCE)
box7_SOURCES                    = $(TEST_APP_SOURCE)
box8_SOURCES                    = $(TEST_APP_SOURCE)
box_easy_SOURCES                = $(TEST_APP_SOURCE)
box_easy2_SOURCES               = $(TEST_APP_SOURCE)
box_seal_SOURCES                = $(TEST_APP_SOURCE)
box_seed_SOURCES                = $(TEST_APP_SOURCE)
chacha20_SOURCES                = $(TEST_APP_SOURCE)
codecs_SOURCES                  = $(TEST_APP_SOURCE)
core_ed25519_SOURCES            = $(TEST_APP_SOURCE)
core1_SOURCES                   = $(TEST_APP_SOURCE)
core2_SOURCES                   = $(TEST_APP_SOURCE)
core3_SOURCES                   = $(TEST_APP_SOURCE)
core4_SOURCES                   = $(TEST_APP_SOURCE)
core5_SOURCES                   = $(TEST_APP_SOURCE)
core6_SOURCES                   = $(TEST_APP_SOURCE)
ed25519_convert_SOURCES         = $(TEST_APP_SOURCE)
generichash_SOURCES             = $(TEST_APP_SOURCE)
generichash2_SOURCES            = $(TEST_APP_SOURCE)
generichash3_SOURCES            = $(TEST_APP_SOURCE)
hash_SOURCES                    = $(TEST_APP_SOURCE)
hash3_SOURCES                   = $(TEST_APP_SOURCE)
kdf_SOURCES                     = $(TEST_APP_SOURCE)
keygen_SOURCES                  = $(TEST_APP_SOURCE)
kx_SOURCES                      = $(TEST_APP_SOURCE)
metamorphic_SOURCES             = $(TEST_APP_SOURCE)
misuse_SOURCES                  = $(TEST_APP_SOURCE)
onetimeauth_SOURCES             = $(TEST_APP_SOURCE)
onetimeauth2_SOURCES            = $(TEST_APP_SOURCE)
onetimeauth7_SOURCES            = $(TEST_APP_SOURCE)
pwhash_argon2i_SOURCES          = $(TEST_APP_SOURCE)
pwhash_argon2id_SOURCES         = $(TEST_APP_SOURCE)
pwhash_scrypt_SOURCES           = $(TEST_APP_SOURCE)
pwhash_scrypt_ll_SOURCES        = $(TEST_APP_SOURCE)
randombytes_SOURCES             = $(TEST_APP_SOURCE)
scalarmult_SOURCES              = $(TEST_APP_SOURCE)
scalarmult_ed25519_SOURCES      = $(TEST_APP_SOURCE)
scalarmult2_SOURCES             = $(TEST_APP_SOURCE)
scalarmult5_SOURCES             = $(TEST_APP_SOURCE)
scalarmult6_SOURCES             = $(TEST_APP_SOURCE)
scalarmult7_SOURCES             = $(TEST_APP_SOURCE)
secretbox_SOURCES               = $(TEST_APP_SOURCE)
secretbox2_SOURCES              = $(TEST_APP_SOURCE)
secretbox7_SOURCES              = $(TEST_APP_SOURCE)
secretbox8_SOURCES              = $(TEST_APP_SOURCE)
secretbox_easy_SOURCES          = $(TEST_APP_SOURCE)
secretbox_easy2_SOURCES         = $(TEST_APP_SOURCE)
secretstream_SOURCES            = $(TEST_APP_SOURCE)
shorthash_SOURCES               = $(TEST_APP_SOURCE)
sign_SOURCES                    = $(TEST_APP_SOURCE)
siphashx24_SOURCES              = $(TEST_APP_SOURCE)
sodium_core_SOURCES             = $(TEST_APP_SOURCE)
sodium_utils_SOURCES            = $(TEST_APP_SOURCE)
sodium_utils2_SOURCES           = $(TEST_APP_SOURCE)
sodium_utils3_SOURCES           = $(TEST_APP_SOURCE)
sodium_version_SOURCES          = $(TEST_APP_SOURCE)
stream_SOURCES                  = $(TEST_APP_SOURCE)
stream2_SOURCES                 = $(TEST_APP_SOURCE)
stream3_SOURCES                 = $(TEST_APP_SOURCE)
stream4_SOURCES                 = $(TEST_APP_SOURCE)
verify1_SOURCES                 = $(TEST_APP_SOURCE)
xchacha20_SOURCES               = $(TEST_APP_SOURCE)
else
aead_aes256gcm_SOURCES          = cmptest.h aead_aes256gcm.c
aead_chacha20poly1305_SOURCES   = cmptest.h aead_chacha20poly1305.c
aead_xchacha20poly1305_SOURCES  = cmptest.h aead_xchacha20poly1305.c
auth_SOURCES                    = cmptest.h auth.c
auth2_SOURCES                   = cmptest.h auth2.c
auth3_SOURCES                   = cmptest.h auth3.c
auth5_SOURCES                   = cmptest.h auth5.c quirks.h
auth6_SOURCES                   = cmptest.h auth6.c quirks.h
auth7_SOURCES                   = cmptest.h auth7.c quirks.h
box_SOURCES                     = cmptest.h box.c
box2_SOURCES                    = cmptest.h box2.c
box7_SOURCES                    = cmptest.h box7.c
box8_SOURCES                    = cmptest.h box8.c
box_easy_SOURCES                = cmptest.h box_easy.c
box_easy2_SOURCES               = cmptest.h box_easy2.c
box_seal_SOURCES                = cmptest.h box_seal.c
box_seed_SOURCES                = cmptest.h box_seed.c
chacha20_SOURCES                = cmptest.h chacha20.c
codecs_SOURCES                  = cmptest.h codecs.c
core_ed25519_SOURCES            = cmptest.h core_ed25519.c
core1_SOURCES                   = cmptest.h core1.c
core2_SOURCES                   = cmptest.h core2.c
core3_SOURCES                   = cmptest.h core3.c
core4_SOURCES                   = cmptest.h core4.c
core5_SOURCES                   = cmptest.h core5.c
core6_SOURCES                   = cmptest.h core6.c
ed25519_convert_SOURCES         = cmptest.h ed25519_convert.c
generichash_SOURCES             = cmptest.h generichash.c
generichash2_SOURCES            = cmptest.h generichash2.c
generichash3_SOURCES            = cmptest.h generichash3.c
hash_SOURCES                    = cmptest.h hash.c
hash3_SOURCES                   = cmptest.h hash3.c
kdf_SOURCES                     = cmptest.h kdf.c
keygen_SOURCES                  = cmptest.h keygen.c
kx_SOURCES                      = cmptest.h kx.c
metamorphic_SOURCES             = cmptest.h metamorphic.c
misuse_SOURCES                  = cmptest.h misuse.c
onetimeauth_SOURCES             = cmptest.h onetimeauth.c
onetimeauth2_SOURCES            = cmptest.h onetimeauth2.c
onetimeauth7_SOURCES            = cmptest.h onetimeauth7.c
pwhash_argon2i_SOURCES          = cmptest.h pwhash_argon2i.c
pwhash_argon2id_SOURCES         = cmptest.h pwhash_argon2id.c
pwhash_scrypt_SOURCES           = cmptest.h pwhash_scrypt.c
pwhash_scrypt_ll_SOURCES        = cmptest.h pwhash_scrypt_ll.c
randombytes_SOURCES             = cmptest.h randombytes.c
scalarmult_SOURCES              = cmptest.h scalarmult.c
scalarmult_ed25519_SOURCES      = cmptest.h scalarmult_ed25519.c
scalarmult2_SOURCES             = cmptest.h scalarmult2.c
scalarmult5_SOURCES             = cmptest.h scalarmult5.c
scalarmult6_SOURCES             = cmptest.h scalarmult6.c
scalarmult7_SOURCES             = cmptest.h scalarmult7.c
secretbox_SOURCES               = cmptest.h secretbox.c
secretbox2_SOURCES              = cmptest.h secretbox2.c
secretbox7_SOURCES              = cmptest.h secretbox7.c
secretbox8_SOURCES              = cmptest.h secretbox8.c
secretbox_easy_SOURCES          = cmptest.h secretbox_easy.c
secretbox_easy2_SOURCES         = cmptest.h secretbox_easy2.c
secretstream_SOURCES            = cmptest.h secretstream.c
shorthash_SOURCES               = cmptest.h shorthash.c
sign_SOURCES                    = cmptest.h sign.c
siphashx24_SOURCES              = cmptest.h siphashx24.c
sodium_core_SOURCES             = cmptest.h sodium_core.c
sodium_utils_SOURCES            = cmptest.h sodium_utils.c
sodium_utils2_SOURCES           = cmptest.h sodium_utils2.c
sodium_utils3_SOURCES           = cmptest.h sodium_utils3.c
sodium_version_SOURCES          = cmptest.h sodium_version.c
stream_SOURCES                  = cmptest.h stream.c
stream2_SOURCES                 = cmptest.h stream2.c
stream3_SOURCES                 = cmptest.h stream3.c
stream4_SOURCES                 = cmptest.h stream4.c
verify1_SOURCES                 = cmptest.h verify1.c
xchacha20_SOURCES               = cmptest.h xchacha20.c
endif

aead_aes256gcm_LDADD                  = $(TESTS_LDADD)
aead_aes256gcm_CPPFLAGS               = $(TESTS_CPPFLAGS) -DTEST_NAME=\"aead_aes256gcm\" -DTEST_NAME=\"aead_aes256gcm\"
aead_aes256gcm_LDFLAGS                = $(TESTS_LINK_FLAGS)

aead_chacha20poly1305_LDADD           = $(TESTS_LDADD)
aead_chacha20poly1305_CPPFLAGS        = $(TESTS_CPPFLAGS) -DTEST_NAME=\"aead_chacha20poly1305\" -DTEST_NAME=\"aead_chacha20poly1305\"
aead_chacha20poly1305_LDFLAGS         = $(TESTS_LINK_FLAGS)

aead_xchacha20poly1305_LDADD           = $(TESTS_LDADD)
aead_xchacha20poly1305_CPPFLAGS        = $(TESTS_CPPFLAGS) -DTEST_NAME=\"aead_xchacha20poly1305\"
aead_xchacha20poly1305_LDFLAGS         = $(TESTS_LINK_FLAGS)

auth_LDADD           = $(TESTS_LDADD)
auth_CPPFLAGS        = $(TESTS_CPPFLAGS) -DTEST_NAME=\"auth\"
auth_LDFLAGS         = $(TESTS_LINK_FLAGS)

auth2_LDADD           = $(TESTS_LDADD)
auth2_CPPFLAGS        = $(TESTS_CPPFLAGS) -DTEST_NAME=\"auth2\"
auth2_LDFLAGS         = $(TESTS_LINK_FLAGS)

auth3_LDADD           = $(TESTS_LDADD)
auth3_CPPFLAGS        = $(TESTS_CPPFLAGS) -DTEST_NAME=\"auth3\"
auth3_LDFLAGS         = $(TESTS_LINK_FLAGS)

auth5_LDADD           = $(TESTS_LDADD)
auth5_CPPFLAGS        = $(TESTS_CPPFLAGS) -DTEST_NAME=\"auth5\"
auth5_LDFLAGS         = $(TESTS_LINK_FLAGS)

auth6_LDADD           = $(TESTS_LDADD)
auth6_CPPFLAGS        = $(TESTS_CPPFLAGS) -DTEST_NAME=\"auth6\"
auth6_LDFLAGS         = $(TESTS_LINK_FLAGS)

auth7_LDADD           = $(TESTS_LDADD)
auth7_CPPFLAGS        = $(TESTS_CPPFLAGS) -DTEST_NAME=\"auth7\"
auth7_LDFLAGS         = $(TESTS_LINK_FLAGS)

box_LDADD           = $(TESTS_LDADD)
box_CPPFLAGS        = $(TESTS_CPPFLAGS) -DTEST_NAME=\"box\"
box_LDFLAGS         = $(TESTS_LINK_FLAGS)

box2_LDADD           = $(TESTS_LDADD)
box2_CPPFLAGS        = $(TESTS_CPPFLAGS) -DTEST_NAME=\"box2\"
box2_LDFLAGS         = $(TESTS_LINK_FLAGS)

box7_LDADD           = $(TESTS_LDADD)
box7_CPPFLAGS        = $(TESTS_CPPFLAGS) -DTEST_NAME=\"box7\"
box7_LDFLAGS         = $(TESTS_LINK_FLAGS)

box8_LDADD           = $(TESTS_LDADD)
box8_CPPFLAGS        = $(TESTS_CPPFLAGS) -DTEST_NAME=\"box8\"
box8_LDFLAGS         = $(TESTS_LINK_FLAGS)

box_easy_LDADD           = $(TESTS_LDADD)
box_easy_CPPFLAGS        = $(TESTS_CPPFLAGS) -DTEST_NAME=\"box_easy\"
box_easy_LDFLAGS         = $(TESTS_LINK_FLAGS)

box_easy2_LDADD           = $(TESTS_LDADD)
box_easy2_CPPFLAGS        = $(TESTS_CPPFLAGS) -DTEST_NAME=\"box_easy2\"
box_easy2_LDFLAGS         = $(TESTS_LINK_FLAGS)

box_seal_LDADD           = $(TESTS_LDADD)
box_seal_CPPFLAGS        = $(TESTS_CPPFLAGS) -DTEST_NAME=\"box_seal\"
box_seal_LDFLAGS         = $(TESTS_LINK_FLAGS)

box_seed_LDADD           = $(TESTS_LDADD)
box_seed_CPPFLAGS        = $(TESTS_CPPFLAGS) -DTEST_NAME=\"box_seed\"
box_seed_LDFLAGS         = $(TESTS_LINK_FLAGS)

chacha20_LDADD           = $(TESTS_LDADD)
chacha20_CPPFLAGS        = $(TESTS_CPPFLAGS) -DTEST_NAME=\"chacha20\"
chacha20_LDFLAGS         = $(TESTS_LINK_FLAGS)

codecs_LDADD           = $(TESTS_LDADD)
codecs_CPPFLAGS        = $(TESTS_CPPFLAGS) -DTEST_NAME=\"codecs\"
codecs_LDFLAGS         = $(TESTS_LINK_FLAGS)

core_ed25519_LDADD           = $(TESTS_LDADD)
core_ed25519_CPPFLAGS        = $(TESTS_CPPFLAGS) -DTEST_NAME=\"core_ed25519\"
core_ed25519_LDFLAGS         = $(TESTS_LINK_FLAGS)

core1_LDADD           = $(TESTS_LDADD)
core1_CPPFLAGS        = $(TESTS_CPPFLAGS) -DTEST_NAME=\"core1\"
core1_LDFLAGS         = $(TESTS_LINK_FLAGS)

core2_LDADD           = $(TESTS_LDADD)
core2_CPPFLAGS        = $(TESTS_CPPFLAGS) -DTEST_NAME=\"core2\"
core2_LDFLAGS         = $(TESTS_LINK_FLAGS)

core3_LDADD           = $(TESTS_LDADD)
core3_CPPFLAGS        = $(TESTS_CPPFLAGS) -DTEST_NAME=\"core3\"
core3_LDFLAGS         = $(TESTS_LINK_FLAGS)

core4_LDADD           = $(TESTS_LDADD)
core4_CPPFLAGS        = $(TESTS_CPPFLAGS) -DTEST_NAME=\"core4\"
core4_LDFLAGS         = $(TESTS_LINK_FLAGS)

core5_LDADD           = $(TESTS_LDADD)
core5_CPPFLAGS        = $(TESTS_CPPFLAGS) -DTEST_NAME=\"core5\"
core5_LDFLAGS         = $(TESTS_LINK_FLAGS)

core6_LDADD           = $(TESTS_LDADD)
core6_CPPFLAGS        = $(TESTS_CPPFLAGS) -DTEST_NAME=\"core6\"
core6_LDFLAGS         = $(TESTS_LINK_FLAGS)

ed25519_convert_LDADD           = $(TESTS_LDADD)
ed25519_convert_CPPFLAGS        = $(TESTS_CPPFLAGS) -DTEST_NAME=\"ed25519_convert\"
ed25519_convert_LDFLAGS         = $(TESTS_LINK_FLAGS)

generichash_LDADD           = $(TESTS_LDADD)
generichash_CPPFLAGS        = $(TESTS_CPPFLAGS) -DTEST_NAME=\"generichash\"
generichash_LDFLAGS         = $(TESTS_LINK_FLAGS)

generichash2_LDADD           = $(TESTS_LDADD)
generichash2_CPPFLAGS        = $(TESTS_CPPFLAGS) -DTEST_NAME=\"generichash2\"
generichash2_LDFLAGS         = $(TESTS_LINK_FLAGS)

generichash3_LDADD           = $(TESTS_LDADD)
generichash3_CPPFLAGS        = $(TESTS_CPPFLAGS) -DTEST_NAME=\"generichash3\"
generichash3_LDFLAGS         = $(TESTS_LINK_FLAGS)

hash_LDADD           = $(TESTS_LDADD)
hash_CPPFLAGS        = $(TESTS_CPPFLAGS) -DTEST_NAME=\"hash\"
hash_LDFLAGS         = $(TESTS_LINK_FLAGS)

hash3_LDADD           = $(TESTS_LDADD)
hash3_CPPFLAGS        = $(TESTS_CPPFLAGS) -DTEST_NAME=\"hash3\"
hash3_LDFLAGS         = $(TESTS_LINK_FLAGS)

kdf_LDADD           = $(TESTS_LDADD)
kdf_CPPFLAGS        = $(TESTS_CPPFLAGS) -DTEST_NAME=\"kdf\"
kdf_LDFLAGS         = $(TESTS_LINK_FLAGS)

keygen_LDADD           = $(TESTS_LDADD)
keygen_CPPFLAGS        = $(TESTS_CPPFLAGS) -DTEST_NAME=\"keygen\"
keygen_LDFLAGS         = $(TESTS_LINK_FLAGS)

kx_LDADD           = $(TESTS_LDADD)
kx_CPPFLAGS        = $(TESTS_CPPFLAGS) -DTEST_NAME=\"kx\"
kx_LDFLAGS         = $(TESTS_LINK_FLAGS)

metamorphic_LDADD           = $(TESTS_LDADD)
metamorphic_CPPFLAGS        = $(TESTS_CPPFLAGS) -DTEST_NAME=\"metamorphic\"
metamorphic_LDFLAGS         = $(TESTS_LINK_FLAGS)

misuse_LDADD           = $(TESTS_LDADD)
misuse_CPPFLAGS        = $(TESTS_CPPFLAGS) -DTEST_NAME=\"misuse\"
misuse_LDFLAGS         = $(TESTS_LINK_FLAGS)

onetimeauth_LDADD           = $(TESTS_LDADD)
onetimeauth_CPPFLAGS        = $(TESTS_CPPFLAGS) -DTEST_NAME=\"onetimeauth\"
onetimeauth_LDFLAGS         = $(TESTS_LINK_FLAGS)

onetimeauth2_LDADD           = $(TESTS_LDADD)
onetimeauth2_CPPFLAGS        = $(TESTS_CPPFLAGS) -DTEST_NAME=\"onetimeauth2\"
onetimeauth2_LDFLAGS         = $(TESTS_LINK_FLAGS)

onetimeauth7_LDADD           = $(TESTS_LDADD)
onetimeauth7_CPPFLAGS        = $(TESTS_CPPFLAGS) -DTEST_NAME=\"onetimeauth7\"
onetimeauth7_LDFLAGS         = $(TESTS_LINK_FLAGS)

pwhash_argon2i_LDADD           = $(TESTS_LDADD)
pwhash_argon2i_CPPFLAGS        = $(TESTS_CPPFLAGS) -DTEST_NAME=\"pwhash_argon2i\"
pwhash_argon2i_LDFLAGS         = $(TESTS_LINK_FLAGS)

pwhash_argon2id_LDADD           = $(TESTS_LDADD)
pwhash_argon2id_CPPFLAGS        = $(TESTS_CPPFLAGS) -DTEST_NAME=\"pwhash_argon2id\"
pwhash_argon2id_LDFLAGS         = $(TESTS_LINK_FLAGS)

pwhash_scrypt_LDADD           = $(TESTS_LDADD)
pwhash_scrypt_CPPFLAGS        = $(TESTS_CPPFLAGS) -DTEST_NAME=\"pwhash_scrypt\"
pwhash_scrypt_LDFLAGS         = $(TESTS_LINK_FLAGS)

pwhash_scrypt_ll_LDADD           = $(TESTS_LDADD)
pwhash_scrypt_ll_CPPFLAGS        = $(TESTS_CPPFLAGS) -DTEST_NAME=\"pwhash_scrypt_ll\"
pwhash_scrypt_ll_LDFLAGS         = $(TESTS_LINK_FLAGS)

randombytes_LDADD           = $(TESTS_LDADD)
randombytes_CPPFLAGS        = $(TESTS_CPPFLAGS) -DTEST_NAME=\"randombytes\"
randombytes_LDFLAGS         = $(TESTS_LINK_FLAGS)

scalarmult_LDADD           = $(TESTS_LDADD)
scalarmult_CPPFLAGS        = $(TESTS_CPPFLAGS) -DTEST_NAME=\"scalarmult\"
scalarmult_LDFLAGS         = $(TESTS_LINK_FLAGS)

scalarmult_ed25519_LDADD           = $(TESTS_LDADD)
scalarmult_ed25519_CPPFLAGS        = $(TESTS_CPPFLAGS) -DTEST_NAME=\"scalarmult_ed25519\"
scalarmult_ed25519_LDFLAGS         = $(TESTS_LINK_FLAGS)

scalarmult2_LDADD           = $(TESTS_LDADD)
scalarmult2_CPPFLAGS        = $(TESTS_CPPFLAGS) -DTEST_NAME=\"scalarmult2\"
scalarmult2_LDFLAGS         = $(TESTS_LINK_FLAGS)

scalarmult5_LDADD           = $(TESTS_LDADD)
scalarmult5_CPPFLAGS        = $(TESTS_CPPFLAGS) -DTEST_NAME=\"scalarmult5\"
scalarmult5_LDFLAGS         = $(TESTS_LINK_FLAGS)

scalarmult6_LDADD           = $(TESTS_LDADD)
scalarmult6_CPPFLAGS        = $(TESTS_CPPFLAGS) -DTEST_NAME=\"scalarmult6\"
scalarmult6_LDFLAGS         = $(TESTS_LINK_FLAGS)

scalarmult7_LDADD           = $(TESTS_LDADD)
scalarmult7_CPPFLAGS        = $(TESTS_CPPFLAGS) -DTEST_NAME=\"scalarmult7\"
scalarmult7_LDFLAGS         = $(TESTS_LINK_FLAGS)

secretbox_LDADD           = $(TESTS_LDADD)
secretbox_CPPFLAGS        = $(TESTS_CPPFLAGS) -DTEST_NAME=\"secretbox\"
secretbox_LDFLAGS         = $(TESTS_LINK_FLAGS)

secretbox2_LDADD           = $(TESTS_LDADD)
secretbox2_CPPFLAGS        = $(TESTS_CPPFLAGS) -DTEST_NAME=\"secretbox2\"
secretbox2_LDFLAGS         = $(TESTS_LINK_FLAGS)

secretbox7_LDADD           = $(TESTS_LDADD)
secretbox7_CPPFLAGS        = $(TESTS_CPPFLAGS) -DTEST_NAME=\"secretbox7\"
secretbox7_LDFLAGS         = $(TESTS_LINK_FLAGS)

secretbox8_LDADD           = $(TESTS_LDADD)
secretbox8_CPPFLAGS        = $(TESTS_CPPFLAGS) -DTEST_NAME=\"secretbox8\"
secretbox8_LDFLAGS         = $(TESTS_LINK_FLAGS)

secretbox_easy_LDADD           = $(TESTS_LDADD)
secretbox_easy_CPPFLAGS        = $(TESTS_CPPFLAGS) -DTEST_NAME=\"secretbox_easy\"
secretbox_easy_LDFLAGS         = $(TESTS_LINK_FLAGS)

secretbox_easy2_LDADD           = $(TESTS_LDADD)
secretbox_easy2_CPPFLAGS        = $(TESTS_CPPFLAGS) -DTEST_NAME=\"secretbox_easy2\"
secretbox_easy2_LDFLAGS         = $(TESTS_LINK_FLAGS)

secretstream_LDADD           = $(TESTS_LDADD)
secretstream_CPPFLAGS        = $(TESTS_CPPFLAGS) -DTEST_NAME=\"secretstream\"
secretstream_LDFLAGS         = $(TESTS_LINK_FLAGS)

shorthash_LDADD           = $(TESTS_LDADD)
shorthash_CPPFLAGS        = $(TESTS_CPPFLAGS) -DTEST_NAME=\"shorthash\"
shorthash_LDFLAGS         = $(TESTS_LINK_FLAGS)

sign_LDADD           = $(TESTS_LDADD)
sign_CPPFLAGS        = $(TESTS_CPPFLAGS) -DTEST_NAME=\"sign\"
sign_LDFLAGS         = $(TESTS_LINK_FLAGS)

siphashx24_LDADD           = $(TESTS_LDADD)
siphashx24_CPPFLAGS        = $(TESTS_CPPFLAGS) -DTEST_NAME=\"siphashx24\"
siphashx24_LDFLAGS         = $(TESTS_LINK_FLAGS)

sodium_core_LDADD           = $(TESTS_LDADD)
sodium_core_CPPFLAGS        = $(TESTS_CPPFLAGS) -DTEST_NAME=\"sodium_core\"
sodium_core_LDFLAGS         = $(TESTS_LINK_FLAGS)

sodium_utils_LDADD           = $(TESTS_LDADD)
sodium_utils_CPPFLAGS        = $(TESTS_CPPFLAGS) -DTEST_NAME=\"sodium_utils\"
sodium_utils_LDFLAGS         = $(TESTS_LINK_FLAGS)

sodium_utils2_LDADD           = $(TESTS_LDADD)
sodium_utils2_CPPFLAGS        = $(TESTS_CPPFLAGS) -DTEST_NAME=\"sodium_utils2\"
sodium_utils2_LDFLAGS         = $(TESTS_LINK_FLAGS)

sodium_utils3_LDADD           = $(TESTS_LDADD)
sodium_utils3_CPPFLAGS        = $(TESTS_CPPFLAGS) -DTEST_NAME=\"sodium_utils3\"
sodium_utils3_LDFLAGS         = $(TESTS_LINK_FLAGS)

sodium_version_LDADD           = $(TESTS_LDADD)
sodium_version_CPPFLAGS        = $(TESTS_CPPFLAGS) -DTEST_NAME=\"sodium_version\"
sodium_version_LDFLAGS         = $(TESTS_LINK_FLAGS)

stream_LDADD           = $(TESTS_LDADD)
stream_CPPFLAGS        = $(TESTS_CPPFLAGS) -DTEST_NAME=\"stream\"
stream_LDFLAGS         = $(TESTS_LINK_FLAGS)

stream2_LDADD           = $(TESTS_LDADD)
stream2_CPPFLAGS        = $(TESTS_CPPFLAGS) -DTEST_NAME=\"stream2\"
stream2_LDFLAGS         = $(TESTS_LINK_FLAGS)

stream3_LDADD           = $(TESTS_LDADD)
stream3_CPPFLAGS        = $(TESTS_CPPFLAGS) -DTEST_NAME=\"stream3\"
stream3_LDFLAGS         = $(TESTS_LINK_FLAGS)

stream4_LDADD           = $(TESTS_LDADD)
stream4_CPPFLAGS        = $(TESTS_CPPFLAGS) -DTEST_NAME=\"stream4\"
stream4_LDFLAGS         = $(TESTS_LINK_FLAGS)

verify1_LDADD           = $(TESTS_LDADD)
verify1_CPPFLAGS        = $(TESTS_CPPFLAGS) -DTEST_NAME=\"verify1\"
verify1_LDFLAGS         = $(TESTS_LINK_FLAGS)

xchacha20_LDADD           = $(TESTS_LDADD)
xchacha20_CPPFLAGS        = $(TESTS_CPPFLAGS) -DTEST_NAME=\"xchacha20\"
xchacha20_LDFLAGS         = $(TESTS_LINK_FLAGS)

if NATIVECLIENT
LOG_COMPILER = ./nacl-test-wrapper.sh
endif

verify: check

@VALGRIND_CHECK_RULES@

# Makefile.in generated by automake 1.16.5 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2021 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@
VPATH = @srcdir@
am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
target_triplet = @target@
@EMSCRIPTEN_FALSE@am__append_1 = \
@EMSCRIPTEN_FALSE@	sodium_utils2 \
@EMSCRIPTEN_FALSE@	sodium_utils3

check_PROGRAMS = $(am__EXEEXT_3)
TESTS = $(am__EXEEXT_3)
@MINIMAL_FALSE@am__append_2 = \
@MINIMAL_FALSE@	core_ed25519 \
@MINIMAL_FALSE@	core_ristretto255 \
@MINIMAL_FALSE@	pwhash_scrypt \
@MINIMAL_FALSE@	pwhash_scrypt_ll \
@MINIMAL_FALSE@	scalarmult_ed25519 \
@MINIMAL_FALSE@	scalarmult_ristretto255 \
@MINIMAL_FALSE@	siphashx24 \
@MINIMAL_FALSE@	xchacha20

subdir = test/default
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/ax_add_fortify_source.m4 \
	$(top_srcdir)/m4/ax_check_catchable_abrt.m4 \
	$(top_srcdir)/m4/ax_check_catchable_segv.m4 \
	$(top_srcdir)/m4/ax_check_compile_flag.m4 \
	$(top_srcdir)/m4/ax_check_define.m4 \
	$(top_srcdir)/m4/ax_check_link_flag.m4 \
	$(top_srcdir)/m4/ax_pthread.m4 $(top_srcdir)/m4/ax_tls.m4 \
	$(top_srcdir)/m4/ax_valgrind_check.m4 \
	$(top_srcdir)/m4/ld-output-def.m4 $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
@EMSCRIPTEN_FALSE@am__EXEEXT_1 = sodium_utils2$(EXEEXT) \
@EMSCRIPTEN_FALSE@	sodium_utils3$(EXEEXT)
@MINIMAL_FALSE@am__EXEEXT_2 = core_ed25519$(EXEEXT) \
@MINIMAL_FALSE@	core_ristretto255$(EXEEXT) \
@MINIMAL_FALSE@	pwhash_scrypt$(EXEEXT) \
@MINIMAL_FALSE@	pwhash_scrypt_ll$(EXEEXT) \
@MINIMAL_FALSE@	scalarmult_ed25519$(EXEEXT) \
@MINIMAL_FALSE@	scalarmult_ristretto255$(EXEEXT) \
@MINIMAL_FALSE@	siphashx24$(EXEEXT) xchacha20$(EXEEXT)
am__EXEEXT_3 = aead_aes256gcm$(EXEEXT) aead_aes256gcm2$(EXEEXT) \
	aead_chacha20poly1305$(EXEEXT) aead_chacha20poly13052$(EXEEXT) \
	aead_xchacha20poly1305$(EXEEXT) auth$(EXEEXT) auth2$(EXEEXT) \
	auth3$(EXEEXT) auth5$(EXEEXT) auth6$(EXEEXT) auth7$(EXEEXT) \
	box$(EXEEXT) box2$(EXEEXT) box7$(EXEEXT) box8$(EXEEXT) \
	box_easy$(EXEEXT) box_easy2$(EXEEXT) box_seal$(EXEEXT) \
	box_seed$(EXEEXT) chacha20$(EXEEXT) codecs$(EXEEXT) \
	core1$(EXEEXT) core2$(EXEEXT) core3$(EXEEXT) core4$(EXEEXT) \
	core5$(EXEEXT) core6$(EXEEXT) ed25519_convert$(EXEEXT) \
	generichash$(EXEEXT) generichash2$(EXEEXT) \
	generichash3$(EXEEXT) hash$(EXEEXT) hash3$(EXEEXT) \
	kdf$(EXEEXT) keygen$(EXEEXT) kx$(EXEEXT) metamorphic$(EXEEXT) \
	misuse$(EXEEXT) onetimeauth$(EXEEXT) onetimeauth2$(EXEEXT) \
	onetimeauth7$(EXEEXT) pwhash_argon2i$(EXEEXT) \
	pwhash_argon2id$(EXEEXT) randombytes$(EXEEXT) \
	scalarmult$(EXEEXT) scalarmult2$(EXEEXT) scalarmult5$(EXEEXT) \
	scalarmult6$(EXEEXT) scalarmult7$(EXEEXT) scalarmult8$(EXEEXT) \
	secretbox$(EXEEXT) secretbox2$(EXEEXT) secretbox7$(EXEEXT) \
	secretbox8$(EXEEXT) secretbox_easy$(EXEEXT) \
	secretbox_easy2$(EXEEXT) secretstream$(EXEEXT) \
	shorthash$(EXEEXT) sign$(EXEEXT) sodium_core$(EXEEXT) \
	sodium_utils$(EXEEXT) sodium_version$(EXEEXT) stream$(EXEEXT) \
	stream2$(EXEEXT) stream3$(EXEEXT) stream4$(EXEEXT) \
	verify1$(EXEEXT) $(am__EXEEXT_1) $(am__EXEEXT_2)
aead_aes256gcm_SOURCES = aead_aes256gcm.c
aead_aes256gcm_OBJECTS = aead_aes256gcm.$(OBJEXT)
aead_aes256gcm_DEPENDENCIES = $(TESTS_LDADD)
AM_V_lt = $(am__v_lt_@AM_V@)
am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
am__v_lt_0 = --silent
am__v_lt_1 = 
aead_aes256gcm2_SOURCES = aead_aes256gcm2.c
aead_aes256gcm2_OBJECTS = aead_aes256gcm2.$(OBJEXT)
aead_aes256gcm2_DEPENDENCIES = $(TESTS_LDADD)
aead_chacha20poly1305_SOURCES = aead_chacha20poly1305.c
aead_chacha20poly1305_OBJECTS = aead_chacha20poly1305.$(OBJEXT)
aead_chacha20poly1305_DEPENDENCIES = $(TESTS_LDADD)
aead_chacha20poly13052_SOURCES = aead_chacha20poly13052.c
aead_chacha20poly13052_OBJECTS = aead_chacha20poly13052.$(OBJEXT)
aead_chacha20poly13052_DEPENDENCIES = $(TESTS_LDADD)
aead_xchacha20poly1305_SOURCES = aead_xchacha20poly1305.c
aead_xchacha20poly1305_OBJECTS = aead_xchacha20poly1305.$(OBJEXT)
aead_xchacha20poly1305_DEPENDENCIES = $(TESTS_LDADD)
auth_SOURCES = auth.c
auth_OBJECTS = auth.$(OBJEXT)
auth_DEPENDENCIES = $(TESTS_LDADD)
auth2_SOURCES = auth2.c
auth2_OBJECTS = auth2.$(OBJEXT)
auth2_DEPENDENCIES = $(TESTS_LDADD)
auth3_SOURCES = auth3.c
auth3_OBJECTS = auth3.$(OBJEXT)
auth3_DEPENDENCIES = $(TESTS_LDADD)
auth5_SOURCES = auth5.c
auth5_OBJECTS = auth5.$(OBJEXT)
auth5_DEPENDENCIES = $(TESTS_LDADD)
auth6_SOURCES = auth6.c
auth6_OBJECTS = auth6.$(OBJEXT)
auth6_DEPENDENCIES = $(TESTS_LDADD)
auth7_SOURCES = auth7.c
auth7_OBJECTS = auth7.$(OBJEXT)
auth7_DEPENDENCIES = $(TESTS_LDADD)
box_SOURCES = box.c
box_OBJECTS = box.$(OBJEXT)
box_DEPENDENCIES = $(TESTS_LDADD)
box2_SOURCES = box2.c
box2_OBJECTS = box2.$(OBJEXT)
box2_DEPENDENCIES = $(TESTS_LDADD)
box7_SOURCES = box7.c
box7_OBJECTS = box7.$(OBJEXT)
box7_DEPENDENCIES = $(TESTS_LDADD)
box8_SOURCES = box8.c
box8_OBJECTS = box8.$(OBJEXT)
box8_DEPENDENCIES = $(TESTS_LDADD)
box_easy_SOURCES = box_easy.c
box_easy_OBJECTS = box_easy.$(OBJEXT)
box_easy_DEPENDENCIES = $(TESTS_LDADD)
box_easy2_SOURCES = box_easy2.c
box_easy2_OBJECTS = box_easy2.$(OBJEXT)
box_easy2_DEPENDENCIES = $(TESTS_LDADD)
box_seal_SOURCES = box_seal.c
box_seal_OBJECTS = box_seal.$(OBJEXT)
box_seal_DEPENDENCIES = $(TESTS_LDADD)
box_seed_SOURCES = box_seed.c
box_seed_OBJECTS = box_seed.$(OBJEXT)
box_seed_DEPENDENCIES = $(TESTS_LDADD)
chacha20_SOURCES = chacha20.c
chacha20_OBJECTS = chacha20.$(OBJEXT)
chacha20_DEPENDENCIES = $(TESTS_LDADD)
codecs_SOURCES = codecs.c
codecs_OBJECTS = codecs.$(OBJEXT)
codecs_DEPENDENCIES = $(TESTS_LDADD)
core1_SOURCES = core1.c
core1_OBJECTS = core1.$(OBJEXT)
core1_DEPENDENCIES = $(TESTS_LDADD)
core2_SOURCES = core2.c
core2_OBJECTS = core2.$(OBJEXT)
core2_DEPENDENCIES = $(TESTS_LDADD)
core3_SOURCES = core3.c
core3_OBJECTS = core3.$(OBJEXT)
core3_DEPENDENCIES = $(TESTS_LDADD)
core4_SOURCES = core4.c
core4_OBJECTS = core4.$(OBJEXT)
core4_DEPENDENCIES = $(TESTS_LDADD)
core5_SOURCES = core5.c
core5_OBJECTS = core5.$(OBJEXT)
core5_DEPENDENCIES = $(TESTS_LDADD)
core6_SOURCES = core6.c
core6_OBJECTS = core6.$(OBJEXT)
core6_DEPENDENCIES = $(TESTS_LDADD)
core_ed25519_SOURCES = core_ed25519.c
core_ed25519_OBJECTS = core_ed25519.$(OBJEXT)
core_ed25519_DEPENDENCIES = $(TESTS_LDADD)
core_ristretto255_SOURCES = core_ristretto255.c
core_ristretto255_OBJECTS = core_ristretto255.$(OBJEXT)
core_ristretto255_DEPENDENCIES = $(TESTS_LDADD)
ed25519_convert_SOURCES = ed25519_convert.c
ed25519_convert_OBJECTS = ed25519_convert.$(OBJEXT)
ed25519_convert_DEPENDENCIES = $(TESTS_LDADD)
generichash_SOURCES = generichash.c
generichash_OBJECTS = generichash.$(OBJEXT)
generichash_DEPENDENCIES = $(TESTS_LDADD)
generichash2_SOURCES = generichash2.c
generichash2_OBJECTS = generichash2.$(OBJEXT)
generichash2_DEPENDENCIES = $(TESTS_LDADD)
generichash3_SOURCES = generichash3.c
generichash3_OBJECTS = generichash3.$(OBJEXT)
generichash3_DEPENDENCIES = $(TESTS_LDADD)
hash_SOURCES = hash.c
hash_OBJECTS = hash.$(OBJEXT)
hash_DEPENDENCIES = $(TESTS_LDADD)
hash3_SOURCES = hash3.c
hash3_OBJECTS = hash3.$(OBJEXT)
hash3_DEPENDENCIES = $(TESTS_LDADD)
kdf_SOURCES = kdf.c
kdf_OBJECTS = kdf.$(OBJEXT)
kdf_DEPENDENCIES = $(TESTS_LDADD)
keygen_SOURCES = keygen.c
keygen_OBJECTS = keygen.$(OBJEXT)
keygen_DEPENDENCIES = $(TESTS_LDADD)
kx_SOURCES = kx.c
kx_OBJECTS = kx.$(OBJEXT)
kx_DEPENDENCIES = $(TESTS_LDADD)
metamorphic_SOURCES = metamorphic.c
metamorphic_OBJECTS = metamorphic.$(OBJEXT)
metamorphic_DEPENDENCIES = $(TESTS_LDADD)
misuse_SOURCES = misuse.c
misuse_OBJECTS = misuse.$(OBJEXT)
misuse_DEPENDENCIES = $(TESTS_LDADD)
onetimeauth_SOURCES = onetimeauth.c
onetimeauth_OBJECTS = onetimeauth.$(OBJEXT)
onetimeauth_DEPENDENCIES = $(TESTS_LDADD)
onetimeauth2_SOURCES = onetimeauth2.c
onetimeauth2_OBJECTS = onetimeauth2.$(OBJEXT)
onetimeauth2_DEPENDENCIES = $(TESTS_LDADD)
onetimeauth7_SOURCES = onetimeauth7.c
onetimeauth7_OBJECTS = onetimeauth7.$(OBJEXT)
onetimeauth7_DEPENDENCIES = $(TESTS_LDADD)
pwhash_argon2i_SOURCES = pwhash_argon2i.c
pwhash_argon2i_OBJECTS = pwhash_argon2i.$(OBJEXT)
pwhash_argon2i_DEPENDENCIES = $(TESTS_LDADD)
pwhash_argon2id_SOURCES = pwhash_argon2id.c
pwhash_argon2id_OBJECTS = pwhash_argon2id.$(OBJEXT)
pwhash_argon2id_DEPENDENCIES = $(TESTS_LDADD)
pwhash_scrypt_SOURCES = pwhash_scrypt.c
pwhash_scrypt_OBJECTS = pwhash_scrypt.$(OBJEXT)
pwhash_scrypt_DEPENDENCIES = $(TESTS_LDADD)
pwhash_scrypt_ll_SOURCES = pwhash_scrypt_ll.c
pwhash_scrypt_ll_OBJECTS = pwhash_scrypt_ll.$(OBJEXT)
pwhash_scrypt_ll_DEPENDENCIES = $(TESTS_LDADD)
randombytes_SOURCES = randombytes.c
randombytes_OBJECTS = randombytes.$(OBJEXT)
randombytes_DEPENDENCIES = $(TESTS_LDADD)
scalarmult_SOURCES = scalarmult.c
scalarmult_OBJECTS = scalarmult.$(OBJEXT)
scalarmult_DEPENDENCIES = $(TESTS_LDADD)
scalarmult2_SOURCES = scalarmult2.c
scalarmult2_OBJECTS = scalarmult2.$(OBJEXT)
scalarmult2_DEPENDENCIES = $(TESTS_LDADD)
scalarmult5_SOURCES = scalarmult5.c
scalarmult5_OBJECTS = scalarmult5.$(OBJEXT)
scalarmult5_DEPENDENCIES = $(TESTS_LDADD)
scalarmult6_SOURCES = scalarmult6.c
scalarmult6_OBJECTS = scalarmult6.$(OBJEXT)
scalarmult6_DEPENDENCIES = $(TESTS_LDADD)
scalarmult7_SOURCES = scalarmult7.c
scalarmult7_OBJECTS = scalarmult7.$(OBJEXT)
scalarmult7_DEPENDENCIES = $(TESTS_LDADD)
scalarmult8_SOURCES = scalarmult8.c
scalarmult8_OBJECTS = scalarmult8.$(OBJEXT)
scalarmult8_DEPENDENCIES = $(TESTS_LDADD)
scalarmult_ed25519_SOURCES = scalarmult_ed25519.c
scalarmult_ed25519_OBJECTS = scalarmult_ed25519.$(OBJEXT)
scalarmult_ed25519_DEPENDENCIES = $(TESTS_LDADD)
scalarmult_ristretto255_SOURCES = scalarmult_ristretto255.c
scalarmult_ristretto255_OBJECTS = scalarmult_ristretto255.$(OBJEXT)
scalarmult_ristretto255_DEPENDENCIES = $(TESTS_LDADD)
secretbox_SOURCES = secretbox.c
secretbox_OBJECTS = secretbox.$(OBJEXT)
secretbox_DEPENDENCIES = $(TESTS_LDADD)
secretbox2_SOURCES = secretbox2.c
secretbox2_OBJECTS = secretbox2.$(OBJEXT)
secretbox2_DEPENDENCIES = $(TESTS_LDADD)
secretbox7_SOURCES = secretbox7.c
secretbox7_OBJECTS = secretbox7.$(OBJEXT)
secretbox7_DEPENDENCIES = $(TESTS_LDADD)
secretbox8_SOURCES = secretbox8.c
secretbox8_OBJECTS = secretbox8.$(OBJEXT)
secretbox8_DEPENDENCIES = $(TESTS_LDADD)
secretbox_easy_SOURCES = secretbox_easy.c
secretbox_easy_OBJECTS = secretbox_easy.$(OBJEXT)
secretbox_easy_DEPENDENCIES = $(TESTS_LDADD)
secretbox_easy2_SOURCES = secretbox_easy2.c
secretbox_easy2_OBJECTS = secretbox_easy2.$(OBJEXT)
secretbox_easy2_DEPENDENCIES = $(TESTS_LDADD)
secretstream_SOURCES = secretstream.c
secretstream_OBJECTS = secretstream.$(OBJEXT)
secretstream_DEPENDENCIES = $(TESTS_LDADD)
shorthash_SOURCES = shorthash.c
shorthash_OBJECTS = shorthash.$(OBJEXT)
shorthash_DEPENDENCIES = $(TESTS_LDADD)
sign_SOURCES = sign.c
sign_OBJECTS = sign.$(OBJEXT)
sign_DEPENDENCIES = $(TESTS_LDADD)
siphashx24_SOURCES = siphashx24.c
siphashx24_OBJECTS = siphashx24.$(OBJEXT)
siphashx24_DEPENDENCIES = $(TESTS_LDADD)
sodium_core_SOURCES = sodium_core.c
sodium_core_OBJECTS = sodium_core.$(OBJEXT)
sodium_core_DEPENDENCIES = $(TESTS_LDADD)
sodium_utils_SOURCES = sodium_utils.c
sodium_utils_OBJECTS = sodium_utils.$(OBJEXT)
sodium_utils_DEPENDENCIES = $(TESTS_LDADD)
sodium_utils2_SOURCES = sodium_utils2.c
sodium_utils2_OBJECTS = sodium_utils2.$(OBJEXT)
sodium_utils2_DEPENDENCIES = $(TESTS_LDADD)
sodium_utils3_SOURCES = sodium_utils3.c
sodium_utils3_OBJECTS = sodium_utils3.$(OBJEXT)
sodium_utils3_DEPENDENCIES = $(TESTS_LDADD)
sodium_version_SOURCES = sodium_version.c
sodium_version_OBJECTS = sodium_version.$(OBJEXT)
sodium_version_DEPENDENCIES = $(TESTS_LDADD)
stream_SOURCES = stream.c
stream_OBJECTS = stream.$(OBJEXT)
stream_DEPENDENCIES = $(TESTS_LDADD)
stream2_SOURCES = stream2.c
stream2_OBJECTS = stream2.$(OBJEXT)
stream2_DEPENDENCIES = $(TESTS_LDADD)
stream3_SOURCES = stream3.c
stream3_OBJECTS = stream3.$(OBJEXT)
stream3_DEPENDENCIES = $(TESTS_LDADD)
stream4_SOURCES = stream4.c
stream4_OBJECTS = stream4.$(OBJEXT)
stream4_DEPENDENCIES = $(TESTS_LDADD)
verify1_SOURCES = verify1.c
verify1_OBJECTS = verify1.$(OBJEXT)
verify1_DEPENDENCIES = $(TESTS_LDADD)
xchacha20_SOURCES = xchacha20.c
xchacha20_OBJECTS = xchacha20.$(OBJEXT)
xchacha20_DEPENDENCIES = $(TESTS_LDADD)
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.@am__isrc@
depcomp = $(SHELL) $(top_srcdir)/build-aux/depcomp
am__maybe_remake_depfiles = depfiles
am__depfiles_remade = ./$(DEPDIR)/aead_aes256gcm.Po \
	./$(DEPDIR)/aead_aes256gcm2.Po \
	./$(DEPDIR)/aead_chacha20poly1305.Po \
	./$(DEPDIR)/aead_chacha20poly13052.Po \
	./$(DEPDIR)/aead_xchacha20poly1305.Po ./$(DEPDIR)/auth.Po \
	./$(DEPDIR)/auth2.Po ./$(DEPDIR)/auth3.Po ./$(DEPDIR)/auth5.Po \
	./$(DEPDIR)/auth6.Po ./$(DEPDIR)/auth7.Po ./$(DEPDIR)/box.Po \
	./$(DEPDIR)/box2.Po ./$(DEPDIR)/box7.Po ./$(DEPDIR)/box8.Po \
	./$(DEPDIR)/box_easy.Po ./$(DEPDIR)/box_easy2.Po \
	./$(DEPDIR)/box_seal.Po ./$(DEPDIR)/box_seed.Po \
	./$(DEPDIR)/chacha20.Po ./$(DEPDIR)/codecs.Po \
	./$(DEPDIR)/core1.Po ./$(DEPDIR)/core2.Po ./$(DEPDIR)/core3.Po \
	./$(DEPDIR)/core4.Po ./$(DEPDIR)/core5.Po ./$(DEPDIR)/core6.Po \
	./$(DEPDIR)/core_ed25519.Po ./$(DEPDIR)/core_ristretto255.Po \
	./$(DEPDIR)/ed25519_convert.Po ./$(DEPDIR)/generichash.Po \
	./$(DEPDIR)/generichash2.Po ./$(DEPDIR)/generichash3.Po \
	./$(DEPDIR)/hash.Po ./$(DEPDIR)/hash3.Po ./$(DEPDIR)/kdf.Po \
	./$(DEPDIR)/keygen.Po ./$(DEPDIR)/kx.Po \
	./$(DEPDIR)/metamorphic.Po ./$(DEPDIR)/misuse.Po \
	./$(DEPDIR)/onetimeauth.Po ./$(DEPDIR)/onetimeauth2.Po \
	./$(DEPDIR)/onetimeauth7.Po ./$(DEPDIR)/pwhash_argon2i.Po \
	./$(DEPDIR)/pwhash_argon2id.Po ./$(DEPDIR)/pwhash_scrypt.Po \
	./$(DEPDIR)/pwhash_scrypt_ll.Po ./$(DEPDIR)/randombytes.Po \
	./$(DEPDIR)/scalarmult.Po ./$(DEPDIR)/scalarmult2.Po \
	./$(DEPDIR)/scalarmult5.Po ./$(DEPDIR)/scalarmult6.Po \
	./$(DEPDIR)/scalarmult7.Po ./$(DEPDIR)/scalarmult8.Po \
	./$(DEPDIR)/scalarmult_ed25519.Po \
	./$(DEPDIR)/scalarmult_ristretto255.Po \
	./$(DEPDIR)/secretbox.Po ./$(DEPDIR)/secretbox2.Po \
	./$(DEPDIR)/secretbox7.Po ./$(DEPDIR)/secretbox8.Po \
	./$(DEPDIR)/secretbox_easy.Po ./$(DEPDIR)/secretbox_easy2.Po \
	./$(DEPDIR)/secretstream.Po ./$(DEPDIR)/shorthash.Po \
	./$(DEPDIR)/sign.Po ./$(DEPDIR)/siphashx24.Po \
	./$(DEPDIR)/sodium_core.Po ./$(DEPDIR)/sodium_utils.Po \
	./$(DEPDIR)/sodium_utils2.Po ./$(DEPDIR)/sodium_utils3.Po \
	./$(DEPDIR)/sodium_version.Po ./$(DEPDIR)/stream.Po \
	./$(DEPDIR)/stream2.Po ./$(DEPDIR)/stream3.Po \
	./$(DEPDIR)/stream4.Po ./$(DEPDIR)/verify1.Po \
	./$(DEPDIR)/xchacha20.Po
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_@AM_V@)
am__v_CC_ = $(am__v_CC_@AM_DEFAULT_V@)
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_@AM_V@)
am__v_CCLD_ = $(am__v_CCLD_@AM_DEFAULT_V@)
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = aead_aes256gcm.c aead_aes256gcm2.c aead_chacha20poly1305.c \
	aead_chacha20poly13052.c aead_xchacha20poly1305.c auth.c \
	auth2.c auth3.c auth5.c auth6.c auth7.c box.c box2.c box7.c \
	box8.c box_easy.c box_easy2.c box_seal.c box_seed.c chacha20.c \
	codecs.c core1.c core2.c core3.c core4.c core5.c core6.c \
	core_ed25519.c core_ristretto255.c ed25519_convert.c \
	generichash.c generichash2.c generichash3.c hash.c hash3.c \
	kdf.c keygen.c kx.c metamorphic.c misuse.c onetimeauth.c \
	onetimeauth2.c onetimeauth7.c pwhash_argon2i.c \
	pwhash_argon2id.c pwhash_scrypt.c pwhash_scrypt_ll.c \
	randombytes.c scalarmult.c scalarmult2.c scalarmult5.c \
	scalarmult6.c scalarmult7.c scalarmult8.c scalarmult_ed25519.c \
	scalarmult_ristretto255.c secretbox.c secretbox2.c \
	secretbox7.c secretbox8.c secretbox_easy.c secretbox_easy2.c \
	secretstream.c shorthash.c sign.c siphashx24.c sodium_core.c \
	sodium_utils.c sodium_utils2.c sodium_utils3.c \
	sodium_version.c stream.c stream2.c stream3.c stream4.c \
	verify1.c xchacha20.c
DIST_SOURCES = aead_aes256gcm.c aead_aes256gcm2.c \
	aead_chacha20poly1305.c aead_chacha20poly13052.c \
	aead_xchacha20poly1305.c auth.c auth2.c auth3.c auth5.c \
	auth6.c auth7.c box.c box2.c box7.c box8.c box_easy.c \
	box_easy2.c box_seal.c box_seed.c chacha20.c codecs.c core1.c \
	core2.c core3.c core4.c core5.c core6.c core_ed25519.c \
	core_ristretto255.c ed25519_convert.c generichash.c \
	generichash2.c generichash3.c hash.c hash3.c kdf.c keygen.c \
	kx.c metamorphic.c misuse.c onetimeauth.c onetimeauth2.c \
	onetimeauth7.c pwhash_argon2i.c pwhash_argon2id.c \
	pwhash_scrypt.c pwhash_scrypt_ll.c randombytes.c scalarmult.c \
	scalarmult2.c scalarmult5.c scalarmult6.c scalarmult7.c \
	scalarmult8.c scalarmult_ed25519.c scalarmult_ristretto255.c \
	secretbox.c secretbox2.c secretbox7.c secretbox8.c \
	secretbox_easy.c secretbox_easy2.c secretstream.c shorthash.c \
	sign.c siphashx24.c sodium_core.c sodium_utils.c \
	sodium_utils2.c sodium_utils3.c sodium_version.c stream.c \
	stream2.c stream3.c stream4.c verify1.c xchacha20.c
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
am__tty_colors_dummy = \
  mgn= red= grn= lgn= blu= brg= std=; \
  am__color_tests=no
am__tty_colors = { \
  $(am__tty_colors_dummy); \
  if test "X$(AM_COLOR_TESTS)" = Xno; then \
    am__color_tests=no; \
  elif test "X$(AM_COLOR_TESTS)" = Xalways; then \
    am__color_tests=yes; \
  elif test "X$$TERM" != Xdumb && { test -t 1; } 2>/dev/null; then \
    am__color_tests=yes; \
  fi; \
  if test $$am__color_tests = yes; then \
    red='[0;31m'; \
    grn='[0;32m'; \
    lgn='[1;32m'; \
    blu='[1;34m'; \
    mgn='[0;35m'; \
    brg='[1m'; \
    std='[m'; \
  fi; \
}
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__recheck_rx = ^[ 	]*:recheck:[ 	]*
am__global_test_result_rx = ^[ 	]*:global-test-result:[ 	]*
am__copy_in_global_log_rx = ^[ 	]*:copy-in-global-log:[ 	]*
# A command that, given a newline-separated list of test names on the
# standard input, print the name of the tests that are to be re-run
# upon "make recheck".
am__list_recheck_tests = $(AWK) '{ \
  recheck = 1; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
        { \
          if ((getline line2 < ($$0 ".log")) < 0) \
	    recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[nN][Oo]/) \
        { \
          recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[yY][eE][sS]/) \
        { \
          break; \
        } \
    }; \
  if (recheck) \
    print $$0; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# A command that, given a newline-separated list of test names on the
# standard input, create the global log from their .trs and .log files.
am__create_global_log = $(AWK) ' \
function fatal(msg) \
{ \
  print "fatal: making $@: " msg | "cat >&2"; \
  exit 1; \
} \
function rst_section(header) \
{ \
  print header; \
  len = length(header); \
  for (i = 1; i <= len; i = i + 1) \
    printf "="; \
  printf "\n\n"; \
} \
{ \
  copy_in_global_log = 1; \
  global_test_result = "RUN"; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
         fatal("failed to read from " $$0 ".trs"); \
      if (line ~ /$(am__global_test_result_rx)/) \
        { \
          sub("$(am__global_test_result_rx)", "", line); \
          sub("[ 	]*$$", "", line); \
          global_test_result = line; \
        } \
      else if (line ~ /$(am__copy_in_global_log_rx)[nN][oO]/) \
        copy_in_global_log = 0; \
    }; \
  if (copy_in_global_log) \
    { \
      rst_section(global_test_result ": " $$0); \
      while ((rc = (getline line < ($$0 ".log"))) != 0) \
      { \
        if (rc < 0) \
          fatal("failed to read from " $$0 ".log"); \
        print line; \
      }; \
      printf "\n"; \
    }; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# Restructured Text title.
am__rst_title = { sed 's/.*/   &   /;h;s/./=/g;p;x;s/ *$$//;p;g' && echo; }
# Solaris 10 'make', and several other traditional 'make' implementations,
# pass "-e" to $(SHELL), and POSIX 2008 even requires this.  Work around it
# by disabling -e (using the XSI extension "set +e") if it's set.
am__sh_e_setup = case $$- in *e*) set +e;; esac
# Default flags passed to test drivers.
am__common_driver_flags = \
  --color-tests "$$am__color_tests" \
  --enable-hard-errors "$$am__enable_hard_errors" \
  --expect-failure "$$am__expect_failure"
# To be inserted before the command running the test.  Creates the
# directory for the log if needed.  Stores in $dir the directory
# containing $f, in $tst the test, in $log the log.  Executes the
# developer- defined test setup AM_TESTS_ENVIRONMENT (if any), and
# passes TESTS_ENVIRONMENT.  Set up options for the wrapper that
# will run the test scripts (or their associated LOG_COMPILER, if
# thy have one).
am__check_pre = \
$(am__sh_e_setup);					\
$(am__vpath_adj_setup) $(am__vpath_adj)			\
$(am__tty_colors);					\
srcdir=$(srcdir); export srcdir;			\
case "$@" in						\
  */*) am__odir=`echo "./$@" | sed 's|/[^/]*$$||'`;;	\
    *) am__odir=.;; 					\
esac;							\
test "x$$am__odir" = x"." || test -d "$$am__odir" 	\
  || $(MKDIR_P) "$$am__odir" || exit $$?;		\
if test -f "./$$f"; then dir=./;			\
elif test -f "$$f"; then dir=;				\
else dir="$(srcdir)/"; fi;				\
tst=$$dir$$f; log='$@'; 				\
if test -n '$(DISABLE_HARD_ERRORS)'; then		\
  am__enable_hard_errors=no; 				\
else							\
  am__enable_hard_errors=yes; 				\
fi; 							\
case " $(XFAIL_TESTS) " in				\
  *[\ \	]$$f[\ \	]* | *[\ \	]$$dir$$f[\ \	]*) \
    am__expect_failure=yes;;				\
  *)							\
    am__expect_failure=no;;				\
esac; 							\
$(AM_TESTS_ENVIRONMENT) $(TESTS_ENVIRONMENT)
# A shell command to get the names of the tests scripts with any registered
# extension removed (i.e., equivalently, the names of the test logs, with
# the '.log' extension removed).  The result is saved in the shell variable
# '$bases'.  This honors runtime overriding of TESTS and TEST_LOGS.  Sadly,
# we cannot use something simpler, involving e.g., "$(TEST_LOGS:.log=)",
# since that might cause problem with VPATH rewrites for suffix-less tests.
# See also 'test-harness-vpath-rewrite.sh' and 'test-trs-basic.sh'.
am__set_TESTS_bases = \
  bases='$(TEST_LOGS)'; \
  bases=`for i in $$bases; do echo $$i; done | sed 's/\.log$$//'`; \
  bases=`echo $$bases`
AM_TESTSUITE_SUMMARY_HEADER = ' for $(PACKAGE_STRING)'
RECHECK_LOGS = $(TEST_LOGS)
AM_RECURSIVE_TARGETS = check recheck
TEST_SUITE_LOG = test-suite.log
TEST_EXTENSIONS = @EXEEXT@ .test
LOG_DRIVER = $(SHELL) $(top_srcdir)/build-aux/test-driver
LOG_COMPILE = $(LOG_COMPILER) $(AM_LOG_FLAGS) $(LOG_FLAGS)
am__set_b = \
  case '$@' in \
    */*) \
      case '$*' in \
        */*) b='$*';; \
          *) b=`echo '$@' | sed 's/\.log$$//'`; \
       esac;; \
    *) \
      b='$*';; \
  esac
am__test_logs1 = $(TESTS:=.log)
am__test_logs2 = $(am__test_logs1:@EXEEXT@.log=.log)
TEST_LOGS = $(am__test_logs2:.test.log=.log)
TEST_LOG_DRIVER = $(SHELL) $(top_srcdir)/build-aux/test-driver
TEST_LOG_COMPILE = $(TEST_LOG_COMPILER) $(AM_TEST_LOG_FLAGS) \
	$(TEST_LOG_FLAGS)
am__DIST_COMMON = $(srcdir)/Makefile.in \
	$(top_srcdir)/build-aux/depcomp \
	$(top_srcdir)/build-aux/test-driver
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
ALLOCA = @ALLOCA@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCAS = @CCAS@
CCASDEPMODE = @CCASDEPMODE@
CCASFLAGS = @CCASFLAGS@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CFLAGS_AESNI = @CFLAGS_AESNI@
CFLAGS_AVX = @CFLAGS_AVX@
CFLAGS_AVX2 = @CFLAGS_AVX2@
CFLAGS_AVX512F = @CFLAGS_AVX512F@
CFLAGS_MMX = @CFLAGS_MMX@
CFLAGS_PCLMUL = @CFLAGS_PCLMUL@
CFLAGS_RDRAND = @CFLAGS_RDRAND@
CFLAGS_SSE2 = @CFLAGS_SSE2@
CFLAGS_SSE3 = @CFLAGS_SSE3@
CFLAGS_SSE41 = @CFLAGS_SSE41@
CFLAGS_SSSE3 = @CFLAGS_SSSE3@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CSCOPE = @CSCOPE@
CTAGS = @CTAGS@
CWFLAGS = @CWFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
DLL_VERSION = @DLL_VERSION@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
ENABLE_VALGRIND_drd = @ENABLE_VALGRIND_drd@
ENABLE_VALGRIND_helgrind = @ENABLE_VALGRIND_helgrind@
ENABLE_VALGRIND_memcheck = @ENABLE_VALGRIND_memcheck@
ENABLE_VALGRIND_sgcheck = @ENABLE_VALGRIND_sgcheck@
ETAGS = @ETAGS@
EXEEXT = @EXEEXT@
FGREP = @FGREP@
GREP = @GREP@
HAVE_AMD64_ASM_V = @HAVE_AMD64_ASM_V@
HAVE_AVX_ASM_V = @HAVE_AVX_ASM_V@
HAVE_CPUID_V = @HAVE_CPUID_V@
HAVE_TI_MODE_V = @HAVE_TI_MODE_V@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIBTOOL_DEPS = @LIBTOOL_DEPS@
LIBTOOL_EXTRA_FLAGS = @LIBTOOL_EXTRA_FLAGS@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
LT_SYS_LIBRARY_PATH = @LT_SYS_LIBRARY_PATH@
MAINT = @MAINT@
MAKEINFO = @MAKEINFO@
MANIFEST_TOOL = @MANIFEST_TOOL@
MKDIR_P = @MKDIR_P@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PKGCONFIG_LIBS_PRIVATE = @PKGCONFIG_LIBS_PRIVATE@
PTHREAD_CC = @PTHREAD_CC@
PTHREAD_CFLAGS = @PTHREAD_CFLAGS@
PTHREAD_CXX = @PTHREAD_CXX@
PTHREAD_LIBS = @PTHREAD_LIBS@
RANLIB = @RANLIB@
SAFECODE_HOME = @SAFECODE_HOME@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
SODIUM_LIBRARY_MINIMAL_DEF = @SODIUM_LIBRARY_MINIMAL_DEF@
SODIUM_LIBRARY_VERSION = @SODIUM_LIBRARY_VERSION@
SODIUM_LIBRARY_VERSION_MAJOR = @SODIUM_LIBRARY_VERSION_MAJOR@
SODIUM_LIBRARY_VERSION_MINOR = @SODIUM_LIBRARY_VERSION_MINOR@
STRIP = @STRIP@
TEST_LDFLAGS = @TEST_LDFLAGS@
VALGRIND = @VALGRIND@
VALGRIND_ENABLED = @VALGRIND_ENABLED@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
ax_pthread_config = @ax_pthread_config@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
runstatedir = @runstatedir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target = @target@
target_alias = @target_alias@
target_cpu = @target_cpu@
target_os = @target_os@
target_vendor = @target_vendor@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
valgrind_enabled_tools = @valgrind_enabled_tools@
valgrind_tools = @valgrind_tools@
EXTRA_DIST = \
	cmptest.h \
	wasi-test-wrapper.sh \
	wintest.bat \
	pre.js.inc \
	aead_aes256gcm.exp \
	aead_aes256gcm2.exp \
	aead_chacha20poly1305.exp \
	aead_chacha20poly13052.exp \
	aead_xchacha20poly1305.exp \
	auth.exp \
	auth2.exp \
	auth3.exp \
	auth5.exp \
	auth6.exp \
	auth7.exp \
	box.exp \
	box2.exp \
	box7.exp \
	box8.exp \
	box_easy.exp \
	box_easy2.exp \
	box_seal.exp \
	box_seed.exp \
	chacha20.exp \
	codecs.exp \
	core_ed25519.exp \
	core_ristretto255.exp \
	core1.exp \
	core2.exp \
	core3.exp \
	core4.exp \
	core5.exp \
	core6.exp \
	ed25519_convert.exp \
	generichash.exp \
	generichash2.exp \
	generichash3.exp \
	hash.exp \
	hash3.exp \
	kdf.exp \
	keygen.exp \
	kx.exp \
	metamorphic.exp \
	misuse.exp \
	onetimeauth.exp \
	onetimeauth2.exp \
	onetimeauth7.exp \
	pwhash_argon2i.exp \
	pwhash_argon2id.exp \
	pwhash_scrypt.exp \
	pwhash_scrypt_ll.exp \
	randombytes.exp \
	scalarmult.exp \
	scalarmult_ed25519.exp \
	scalarmult_ristretto255.exp \
	scalarmult2.exp \
	scalarmult5.exp \
	scalarmult6.exp \
	scalarmult7.exp \
	scalarmult8.exp \
	secretbox.exp \
	secretbox2.exp \
	secretbox7.exp \
	secretbox8.exp \
	secretbox_easy.exp \
	secretbox_easy2.exp \
	secretstream.exp \
	shorthash.exp \
	sign.exp \
	siphashx24.exp \
	sodium_core.exp \
	sodium_utils.exp \
	sodium_utils2.exp \
	sodium_utils3.exp \
	sodium_version.exp \
	stream.exp \
	stream2.exp \
	stream3.exp \
	stream4.exp \
	verify1.exp \
	xchacha20.exp

DISTCLEANFILES = \
	aead_aes256gcm.res \
	aead_aes256gcm2.res \
	aead_chacha20poly1305.res \
	aead_chacha20poly13052.res \
	aead_xchacha20poly1305.res \
	auth.res \
	auth2.res \
	auth3.res \
	auth5.res \
	auth6.res \
	auth7.res \
	box.res \
	box2.res \
	box7.res \
	box8.res \
	box_easy.res \
	box_easy2.res \
	box_seal.res \
	box_seed.res \
	chacha20.res \
	codecs.res \
	core_ed25519.res \
	core_ristretto255.res \
	core1.res \
	core2.res \
	core3.res \
	core4.res \
	core5.res \
	core6.res \
	ed25519_convert.res \
	generichash.res \
	generichash2.res \
	generichash3.res \
	hash.res \
	hash2.res \
	hash3.res \
	kdf.res \
	keygen.res \
	kx.res \
	metamorphic.res \
	misuse.res \
	onetimeauth.res \
	onetimeauth2.res \
	onetimeauth7.res \
	pwhash_argon2i.res \
	pwhash_argon2id.res \
	pwhash_scrypt.res \
	pwhash_scrypt_ll.res \
	randombytes.res \
	scalarmult.res \
	scalarmult_ed25519.res \
	scalarmult_ristretto255.res \
	scalarmult2.res \
	scalarmult5.res \
	scalarmult6.res \
	scalarmult7.res \
	scalarmult8.res \
	secretbox.res \
	secretbox2.res \
	secretbox7.res \
	secretbox8.res \
	secretbox_easy.res \
	secretbox_easy2.res \
	secretstream.res \
	shorthash.res \
	sign.res \
	siphashx24.res \
	sodium_core.res \
	sodium_utils.res \
	sodium_utils2.res \
	sodium_utils3.res \
	sodium_version.res \
	stream.res \
	stream2.res \
	stream3.res \
	stream4.res \
	verify1.res \
	xchacha20.res

AM_CPPFLAGS = \
	-DTEST_SRCDIR=\"@srcdir@\" \
	-I$(top_srcdir)/src/libsodium/include \
	-I$(top_srcdir)/src/libsodium/include/sodium \
	-I$(top_builddir)/src/libsodium/include \
	-I$(top_builddir)/src/libsodium/include/sodium \
	-I$(top_srcdir)/test/quirks

AM_LDFLAGS = @TEST_LDFLAGS@
TESTS_TARGETS = aead_aes256gcm aead_aes256gcm2 aead_chacha20poly1305 \
	aead_chacha20poly13052 aead_xchacha20poly1305 auth auth2 auth3 \
	auth5 auth6 auth7 box box2 box7 box8 box_easy box_easy2 \
	box_seal box_seed chacha20 codecs core1 core2 core3 core4 \
	core5 core6 ed25519_convert generichash generichash2 \
	generichash3 hash hash3 kdf keygen kx metamorphic misuse \
	onetimeauth onetimeauth2 onetimeauth7 pwhash_argon2i \
	pwhash_argon2id randombytes scalarmult scalarmult2 scalarmult5 \
	scalarmult6 scalarmult7 scalarmult8 secretbox secretbox2 \
	secretbox7 secretbox8 secretbox_easy secretbox_easy2 \
	secretstream shorthash sign sodium_core sodium_utils \
	sodium_version stream stream2 stream3 stream4 verify1 \
	$(am__append_1) $(am__append_2)
TESTS_LDADD = \
	${top_builddir}/src/libsodium/libsodium.la

aead_aes256gcm_SOURCE = cmptest.h aead_aes256gcm.c
aead_aes256gcm_LDADD = $(TESTS_LDADD)
aead_aes256gcm2_SOURCE = cmptest.h aead_aes256gcm2.c
aead_aes256gcm2_LDADD = $(TESTS_LDADD)
aead_chacha20poly1305_SOURCE = cmptest.h aead_chacha20poly1305.c
aead_chacha20poly1305_LDADD = $(TESTS_LDADD)
aead_chacha20poly13052_SOURCE = cmptest.h aead_chacha20poly13052.c
aead_chacha20poly13052_LDADD = $(TESTS_LDADD)
aead_xchacha20poly1305_SOURCE = cmptest.h aead_xchacha20poly1305.c
aead_xchacha20poly1305_LDADD = $(TESTS_LDADD)
auth_SOURCE = cmptest.h auth.c
auth_LDADD = $(TESTS_LDADD)
auth2_SOURCE = cmptest.h auth2.c
auth2_LDADD = $(TESTS_LDADD)
auth3_SOURCE = cmptest.h auth3.c
auth3_LDADD = $(TESTS_LDADD)
auth5_SOURCE = cmptest.h auth5.c quirks.h
auth5_LDADD = $(TESTS_LDADD)
auth6_SOURCE = cmptest.h auth6.c quirks.h
auth6_LDADD = $(TESTS_LDADD)
auth7_SOURCE = cmptest.h auth7.c quirks.h
auth7_LDADD = $(TESTS_LDADD)
box_SOURCE = cmptest.h box.c
box_LDADD = $(TESTS_LDADD)
box2_SOURCE = cmptest.h box2.c
box2_LDADD = $(TESTS_LDADD)
box7_SOURCE = cmptest.h box7.c
box7_LDADD = $(TESTS_LDADD)
box8_SOURCE = cmptest.h box8.c
box8_LDADD = $(TESTS_LDADD)
box_easy_SOURCE = cmptest.h box_easy.c
box_easy_LDADD = $(TESTS_LDADD)
box_easy2_SOURCE = cmptest.h box_easy2.c
box_easy2_LDADD = $(TESTS_LDADD)
box_seal_SOURCE = cmptest.h box_seal.c
box_seal_LDADD = $(TESTS_LDADD)
box_seed_SOURCE = cmptest.h box_seed.c
box_seed_LDADD = $(TESTS_LDADD)
chacha20_SOURCE = cmptest.h chacha20.c
chacha20_LDADD = $(TESTS_LDADD)
codecs_SOURCE = cmptest.h codecs.c
codecs_LDADD = $(TESTS_LDADD)
core_ed25519_SOURCE = cmptest.h core_ed25519.c
core_ed25519_LDADD = $(TESTS_LDADD)
core_ristretto255_SOURCE = cmptest.h core_ristretto255.c
core_ristretto255_LDADD = $(TESTS_LDADD)
core1_SOURCE = cmptest.h core1.c
core1_LDADD = $(TESTS_LDADD)
core2_SOURCE = cmptest.h core2.c
core2_LDADD = $(TESTS_LDADD)
core3_SOURCE = cmptest.h core3.c
core3_LDADD = $(TESTS_LDADD)
core4_SOURCE = cmptest.h core4.c
core4_LDADD = $(TESTS_LDADD)
core5_SOURCE = cmptest.h core5.c
core5_LDADD = $(TESTS_LDADD)
core6_SOURCE = cmptest.h core6.c
core6_LDADD = $(TESTS_LDADD)
ed25519_convert_SOURCE = cmptest.h ed25519_convert.c
ed25519_convert_LDADD = $(TESTS_LDADD)
generichash_SOURCE = cmptest.h generichash.c
generichash_LDADD = $(TESTS_LDADD)
generichash2_SOURCE = cmptest.h generichash2.c
generichash2_LDADD = $(TESTS_LDADD)
generichash3_SOURCE = cmptest.h generichash3.c
generichash3_LDADD = $(TESTS_LDADD)
hash_SOURCE = cmptest.h hash.c
hash_LDADD = $(TESTS_LDADD)
hash3_SOURCE = cmptest.h hash3.c
hash3_LDADD = $(TESTS_LDADD)
kdf_SOURCE = cmptest.h kdf.c
kdf_LDADD = $(TESTS_LDADD)
keygen_SOURCE = cmptest.h keygen.c
keygen_LDADD = $(TESTS_LDADD)
kx_SOURCE = cmptest.h kx.c
kx_LDADD = $(TESTS_LDADD)
metamorphic_SOURCE = cmptest.h metamorphic.c
metamorphic_LDADD = $(TESTS_LDADD)
misuse_SOURCE = cmptest.h misuse.c
misuse_LDADD = $(TESTS_LDADD)
onetimeauth_SOURCE = cmptest.h onetimeauth.c
onetimeauth_LDADD = $(TESTS_LDADD)
onetimeauth2_SOURCE = cmptest.h onetimeauth2.c
onetimeauth2_LDADD = $(TESTS_LDADD)
onetimeauth7_SOURCE = cmptest.h onetimeauth7.c
onetimeauth7_LDADD = $(TESTS_LDADD)
pwhash_argon2i_SOURCE = cmptest.h pwhash_argon2i.c
pwhash_argon2i_LDADD = $(TESTS_LDADD)
pwhash_argon2id_SOURCE = cmptest.h pwhash_argon2id.c
pwhash_argon2id_LDADD = $(TESTS_LDADD)
pwhash_scrypt_SOURCE = cmptest.h pwhash_scrypt.c
pwhash_scrypt_LDADD = $(TESTS_LDADD)
pwhash_scrypt_ll_SOURCE = cmptest.h pwhash_scrypt_ll.c
pwhash_scrypt_ll_LDADD = $(TESTS_LDADD)
randombytes_SOURCE = cmptest.h randombytes.c
randombytes_LDADD = $(TESTS_LDADD)
scalarmult_SOURCE = cmptest.h scalarmult.c
scalarmult_LDADD = $(TESTS_LDADD)
scalarmult_ed25519_SOURCE = cmptest.h scalarmult_ed25519.c
scalarmult_ed25519_LDADD = $(TESTS_LDADD)
scalarmult_ristretto255_SOURCE = cmptest.h scalarmult_ristretto255.c
scalarmult_ristretto255_LDADD = $(TESTS_LDADD)
scalarmult2_SOURCE = cmptest.h scalarmult2.c
scalarmult2_LDADD = $(TESTS_LDADD)
scalarmult5_SOURCE = cmptest.h scalarmult5.c
scalarmult5_LDADD = $(TESTS_LDADD)
scalarmult6_SOURCE = cmptest.h scalarmult6.c
scalarmult6_LDADD = $(TESTS_LDADD)
scalarmult7_SOURCE = cmptest.h scalarmult7.c
scalarmult7_LDADD = $(TESTS_LDADD)
scalarmult8_SOURCE = cmptest.h scalarmult8.c
scalarmult8_LDADD = $(TESTS_LDADD)
secretbox_SOURCE = cmptest.h secretbox.c
secretbox_LDADD = $(TESTS_LDADD)
secretbox2_SOURCE = cmptest.h secretbox2.c
secretbox2_LDADD = $(TESTS_LDADD)
secretbox7_SOURCE = cmptest.h secretbox7.c
secretbox7_LDADD = $(TESTS_LDADD)
secretbox8_SOURCE = cmptest.h secretbox8.c
secretbox8_LDADD = $(TESTS_LDADD)
secretbox_easy_SOURCE = cmptest.h secretbox_easy.c
secretbox_easy_LDADD = $(TESTS_LDADD)
secretbox_easy2_SOURCE = cmptest.h secretbox_easy2.c
secretbox_easy2_LDADD = $(TESTS_LDADD)
secretstream_SOURCE = cmptest.h secretstream.c
secretstream_LDADD = $(TESTS_LDADD)
shorthash_SOURCE = cmptest.h shorthash.c
shorthash_LDADD = $(TESTS_LDADD)
sign_SOURCE = cmptest.h sign.c
sign_LDADD = $(TESTS_LDADD)
siphashx24_SOURCE = cmptest.h siphashx24.c
siphashx24_LDADD = $(TESTS_LDADD)
sodium_core_SOURCE = cmptest.h sodium_core.c
sodium_core_LDADD = $(TESTS_LDADD)
sodium_utils_SOURCE = cmptest.h sodium_utils.c
sodium_utils_LDADD = $(TESTS_LDADD)
sodium_utils2_SOURCE = cmptest.h sodium_utils2.c
sodium_utils2_LDADD = $(TESTS_LDADD)
sodium_utils3_SOURCE = cmptest.h sodium_utils3.c
sodium_utils3_LDADD = $(TESTS_LDADD)
sodium_version_SOURCE = cmptest.h sodium_version.c
sodium_version_LDADD = $(TESTS_LDADD)
stream_SOURCE = cmptest.h stream.c
stream_LDADD = $(TESTS_LDADD)
stream2_SOURCE = cmptest.h stream2.c
stream2_LDADD = $(TESTS_LDADD)
stream3_SOURCE = cmptest.h stream3.c
stream3_LDADD = $(TESTS_LDADD)
stream4_SOURCE = cmptest.h stream4.c
stream4_LDADD = $(TESTS_LDADD)
verify1_SOURCE = cmptest.h verify1.c
verify1_LDADD = $(TESTS_LDADD)
xchacha20_SOURCE = cmptest.h xchacha20.c
xchacha20_LDADD = $(TESTS_LDADD)
@WASI_TRUE@LOG_COMPILER = ./wasi-test-wrapper.sh
all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .log .o .obj .test .test$(EXEEXT) .trs
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign test/default/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign test/default/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

aead_aes256gcm$(EXEEXT): $(aead_aes256gcm_OBJECTS) $(aead_aes256gcm_DEPENDENCIES) $(EXTRA_aead_aes256gcm_DEPENDENCIES) 
	@rm -f aead_aes256gcm$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(aead_aes256gcm_OBJECTS) $(aead_aes256gcm_LDADD) $(LIBS)

aead_aes256gcm2$(EXEEXT): $(aead_aes256gcm2_OBJECTS) $(aead_aes256gcm2_DEPENDENCIES) $(EXTRA_aead_aes256gcm2_DEPENDENCIES) 
	@rm -f aead_aes256gcm2$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(aead_aes256gcm2_OBJECTS) $(aead_aes256gcm2_LDADD) $(LIBS)

aead_chacha20poly1305$(EXEEXT): $(aead_chacha20poly1305_OBJECTS) $(aead_chacha20poly1305_DEPENDENCIES) $(EXTRA_aead_chacha20poly1305_DEPENDENCIES) 
	@rm -f aead_chacha20poly1305$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(aead_chacha20poly1305_OBJECTS) $(aead_chacha20poly1305_LDADD) $(LIBS)

aead_chacha20poly13052$(EXEEXT): $(aead_chacha20poly13052_OBJECTS) $(aead_chacha20poly13052_DEPENDENCIES) $(EXTRA_aead_chacha20poly13052_DEPENDENCIES) 
	@rm -f aead_chacha20poly13052$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(aead_chacha20poly13052_OBJECTS) $(aead_chacha20poly13052_LDADD) $(LIBS)

aead_xchacha20poly1305$(EXEEXT): $(aead_xchacha20poly1305_OBJECTS) $(aead_xchacha20poly1305_DEPENDENCIES) $(EXTRA_aead_xchacha20poly1305_DEPENDENCIES) 
	@rm -f aead_xchacha20poly1305$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(aead_xchacha20poly1305_OBJECTS) $(aead_xchacha20poly1305_LDADD) $(LIBS)

auth$(EXEEXT): $(auth_OBJECTS) $(auth_DEPENDENCIES) $(EXTRA_auth_DEPENDENCIES) 
	@rm -f auth$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(auth_OBJECTS) $(auth_LDADD) $(LIBS)

auth2$(EXEEXT): $(auth2_OBJECTS) $(auth2_DEPENDENCIES) $(EXTRA_auth2_DEPENDENCIES) 
	@rm -f auth2$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(auth2_OBJECTS) $(auth2_LDADD) $(LIBS)

auth3$(EXEEXT): $(auth3_OBJECTS) $(auth3_DEPENDENCIES) $(EXTRA_auth3_DEPENDENCIES) 
	@rm -f auth3$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(auth3_OBJECTS) $(auth3_LDADD) $(LIBS)

auth5$(EXEEXT): $(auth5_OBJECTS) $(auth5_DEPENDENCIES) $(EXTRA_auth5_DEPENDENCIES) 
	@rm -f auth5$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(auth5_OBJECTS) $(auth5_LDADD) $(LIBS)

auth6$(EXEEXT): $(auth6_OBJECTS) $(auth6_DEPENDENCIES) $(EXTRA_auth6_DEPENDENCIES) 
	@rm -f auth6$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(auth6_OBJECTS) $(auth6_LDADD) $(LIBS)

auth7$(EXEEXT): $(auth7_OBJECTS) $(auth7_DEPENDENCIES) $(EXTRA_auth7_DEPENDENCIES) 
	@rm -f auth7$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(auth7_OBJECTS) $(auth7_LDADD) $(LIBS)

box$(EXEEXT): $(box_OBJECTS) $(box_DEPENDENCIES) $(EXTRA_box_DEPENDENCIES) 
	@rm -f box$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(box_OBJECTS) $(box_LDADD) $(LIBS)

box2$(EXEEXT): $(box2_OBJECTS) $(box2_DEPENDENCIES) $(EXTRA_box2_DEPENDENCIES) 
	@rm -f box2$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(box2_OBJECTS) $(box2_LDADD) $(LIBS)

box7$(EXEEXT): $(box7_OBJECTS) $(box7_DEPENDENCIES) $(EXTRA_box7_DEPENDENCIES) 
	@rm -f box7$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(box7_OBJECTS) $(box7_LDADD) $(LIBS)

box8$(EXEEXT): $(box8_OBJECTS) $(box8_DEPENDENCIES) $(EXTRA_box8_DEPENDENCIES) 
	@rm -f box8$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(box8_OBJECTS) $(box8_LDADD) $(LIBS)

box_easy$(EXEEXT): $(box_easy_OBJECTS) $(box_easy_DEPENDENCIES) $(EXTRA_box_easy_DEPENDENCIES) 
	@rm -f box_easy$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(box_easy_OBJECTS) $(box_easy_LDADD) $(LIBS)

box_easy2$(EXEEXT): $(box_easy2_OBJECTS) $(box_easy2_DEPENDENCIES) $(EXTRA_box_easy2_DEPENDENCIES) 
	@rm -f box_easy2$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(box_easy2_OBJECTS) $(box_easy2_LDADD) $(LIBS)

box_seal$(EXEEXT): $(box_seal_OBJECTS) $(box_seal_DEPENDENCIES) $(EXTRA_box_seal_DEPENDENCIES) 
	@rm -f box_seal$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(box_seal_OBJECTS) $(box_seal_LDADD) $(LIBS)

box_seed$(EXEEXT): $(box_seed_OBJECTS) $(box_seed_DEPENDENCIES) $(EXTRA_box_seed_DEPENDENCIES) 
	@rm -f box_seed$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(box_seed_OBJECTS) $(box_seed_LDADD) $(LIBS)

chacha20$(EXEEXT): $(chacha20_OBJECTS) $(chacha20_DEPENDENCIES) $(EXTRA_chacha20_DEPENDENCIES) 
	@rm -f chacha20$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(chacha20_OBJECTS) $(chacha20_LDADD) $(LIBS)

codecs$(EXEEXT): $(codecs_OBJECTS) $(codecs_DEPENDENCIES) $(EXTRA_codecs_DEPENDENCIES) 
	@rm -f codecs$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(codecs_OBJECTS) $(codecs_LDADD) $(LIBS)

core1$(EXEEXT): $(core1_OBJECTS) $(core1_DEPENDENCIES) $(EXTRA_core1_DEPENDENCIES) 
	@rm -f core1$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(core1_OBJECTS) $(core1_LDADD) $(LIBS)

core2$(EXEEXT): $(core2_OBJECTS) $(core2_DEPENDENCIES) $(EXTRA_core2_DEPENDENCIES) 
	@rm -f core2$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(core2_OBJECTS) $(core2_LDADD) $(LIBS)

core3$(EXEEXT): $(core3_OBJECTS) $(core3_DEPENDENCIES) $(EXTRA_core3_DEPENDENCIES) 
	@rm -f core3$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(core3_OBJECTS) $(core3_LDADD) $(LIBS)

core4$(EXEEXT): $(core4_OBJECTS) $(core4_DEPENDENCIES) $(EXTRA_core4_DEPENDENCIES) 
	@rm -f core4$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(core4_OBJECTS) $(core4_LDADD) $(LIBS)

core5$(EXEEXT): $(core5_OBJECTS) $(core5_DEPENDENCIES) $(EXTRA_core5_DEPENDENCIES) 
	@rm -f core5$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(core5_OBJECTS) $(core5_LDADD) $(LIBS)

core6$(EXEEXT): $(core6_OBJECTS) $(core6_DEPENDENCIES) $(EXTRA_core6_DEPENDENCIES) 
	@rm -f core6$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(core6_OBJECTS) $(core6_LDADD) $(LIBS)

core_ed25519$(EXEEXT): $(core_ed25519_OBJECTS) $(core_ed25519_DEPENDENCIES) $(EXTRA_core_ed25519_DEPENDENCIES) 
	@rm -f core_ed25519$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(core_ed25519_OBJECTS) $(core_ed25519_LDADD) $(LIBS)

core_ristretto255$(EXEEXT): $(core_ristretto255_OBJECTS) $(core_ristretto255_DEPENDENCIES) $(EXTRA_core_ristretto255_DEPENDENCIES) 
	@rm -f core_ristretto255$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(core_ristretto255_OBJECTS) $(core_ristretto255_LDADD) $(LIBS)

ed25519_convert$(EXEEXT): $(ed25519_convert_OBJECTS) $(ed25519_convert_DEPENDENCIES) $(EXTRA_ed25519_convert_DEPENDENCIES) 
	@rm -f ed25519_convert$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(ed25519_convert_OBJECTS) $(ed25519_convert_LDADD) $(LIBS)

generichash$(EXEEXT): $(generichash_OBJECTS) $(generichash_DEPENDENCIES) $(EXTRA_generichash_DEPENDENCIES) 
	@rm -f generichash$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(generichash_OBJECTS) $(generichash_LDADD) $(LIBS)

generichash2$(EXEEXT): $(generichash2_OBJECTS) $(generichash2_DEPENDENCIES) $(EXTRA_generichash2_DEPENDENCIES) 
	@rm -f generichash2$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(generichash2_OBJECTS) $(generichash2_LDADD) $(LIBS)

generichash3$(EXEEXT): $(generichash3_OBJECTS) $(generichash3_DEPENDENCIES) $(EXTRA_generichash3_DEPENDENCIES) 
	@rm -f generichash3$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(generichash3_OBJECTS) $(generichash3_LDADD) $(LIBS)

hash$(EXEEXT): $(hash_OBJECTS) $(hash_DEPENDENCIES) $(EXTRA_hash_DEPENDENCIES) 
	@rm -f hash$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(hash_OBJECTS) $(hash_LDADD) $(LIBS)

hash3$(EXEEXT): $(hash3_OBJECTS) $(hash3_DEPENDENCIES) $(EXTRA_hash3_DEPENDENCIES) 
	@rm -f hash3$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(hash3_OBJECTS) $(hash3_LDADD) $(LIBS)

kdf$(EXEEXT): $(kdf_OBJECTS) $(kdf_DEPENDENCIES) $(EXTRA_kdf_DEPENDENCIES) 
	@rm -f kdf$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(kdf_OBJECTS) $(kdf_LDADD) $(LIBS)

keygen$(EXEEXT): $(keygen_OBJECTS) $(keygen_DEPENDENCIES) $(EXTRA_keygen_DEPENDENCIES) 
	@rm -f keygen$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(keygen_OBJECTS) $(keygen_LDADD) $(LIBS)

kx$(EXEEXT): $(kx_OBJECTS) $(kx_DEPENDENCIES) $(EXTRA_kx_DEPENDENCIES) 
	@rm -f kx$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(kx_OBJECTS) $(kx_LDADD) $(LIBS)

metamorphic$(EXEEXT): $(metamorphic_OBJECTS) $(metamorphic_DEPENDENCIES) $(EXTRA_metamorphic_DEPENDENCIES) 
	@rm -f metamorphic$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(metamorphic_OBJECTS) $(metamorphic_LDADD) $(LIBS)

misuse$(EXEEXT): $(misuse_OBJECTS) $(misuse_DEPENDENCIES) $(EXTRA_misuse_DEPENDENCIES) 
	@rm -f misuse$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(misuse_OBJECTS) $(misuse_LDADD) $(LIBS)

onetimeauth$(EXEEXT): $(onetimeauth_OBJECTS) $(onetimeauth_DEPENDENCIES) $(EXTRA_onetimeauth_DEPENDENCIES) 
	@rm -f onetimeauth$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(onetimeauth_OBJECTS) $(onetimeauth_LDADD) $(LIBS)

onetimeauth2$(EXEEXT): $(onetimeauth2_OBJECTS) $(onetimeauth2_DEPENDENCIES) $(EXTRA_onetimeauth2_DEPENDENCIES) 
	@rm -f onetimeauth2$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(onetimeauth2_OBJECTS) $(onetimeauth2_LDADD) $(LIBS)

onetimeauth7$(EXEEXT): $(onetimeauth7_OBJECTS) $(onetimeauth7_DEPENDENCIES) $(EXTRA_onetimeauth7_DEPENDENCIES) 
	@rm -f onetimeauth7$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(onetimeauth7_OBJECTS) $(onetimeauth7_LDADD) $(LIBS)

pwhash_argon2i$(EXEEXT): $(pwhash_argon2i_OBJECTS) $(pwhash_argon2i_DEPENDENCIES) $(EXTRA_pwhash_argon2i_DEPENDENCIES) 
	@rm -f pwhash_argon2i$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(pwhash_argon2i_OBJECTS) $(pwhash_argon2i_LDADD) $(LIBS)

pwhash_argon2id$(EXEEXT): $(pwhash_argon2id_OBJECTS) $(pwhash_argon2id_DEPENDENCIES) $(EXTRA_pwhash_argon2id_DEPENDENCIES) 
	@rm -f pwhash_argon2id$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(pwhash_argon2id_OBJECTS) $(pwhash_argon2id_LDADD) $(LIBS)

pwhash_scrypt$(EXEEXT): $(pwhash_scrypt_OBJECTS) $(pwhash_scrypt_DEPENDENCIES) $(EXTRA_pwhash_scrypt_DEPENDENCIES) 
	@rm -f pwhash_scrypt$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(pwhash_scrypt_OBJECTS) $(pwhash_scrypt_LDADD) $(LIBS)

pwhash_scrypt_ll$(EXEEXT): $(pwhash_scrypt_ll_OBJECTS) $(pwhash_scrypt_ll_DEPENDENCIES) $(EXTRA_pwhash_scrypt_ll_DEPENDENCIES) 
	@rm -f pwhash_scrypt_ll$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(pwhash_scrypt_ll_OBJECTS) $(pwhash_scrypt_ll_LDADD) $(LIBS)

randombytes$(EXEEXT): $(randombytes_OBJECTS) $(randombytes_DEPENDENCIES) $(EXTRA_randombytes_DEPENDENCIES) 
	@rm -f randombytes$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(randombytes_OBJECTS) $(randombytes_LDADD) $(LIBS)

scalarmult$(EXEEXT): $(scalarmult_OBJECTS) $(scalarmult_DEPENDENCIES) $(EXTRA_scalarmult_DEPENDENCIES) 
	@rm -f scalarmult$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(scalarmult_OBJECTS) $(scalarmult_LDADD) $(LIBS)

scalarmult2$(EXEEXT): $(scalarmult2_OBJECTS) $(scalarmult2_DEPENDENCIES) $(EXTRA_scalarmult2_DEPENDENCIES) 
	@rm -f scalarmult2$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(scalarmult2_OBJECTS) $(scalarmult2_LDADD) $(LIBS)

scalarmult5$(EXEEXT): $(scalarmult5_OBJECTS) $(scalarmult5_DEPENDENCIES) $(EXTRA_scalarmult5_DEPENDENCIES) 
	@rm -f scalarmult5$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(scalarmult5_OBJECTS) $(scalarmult5_LDADD) $(LIBS)

scalarmult6$(EXEEXT): $(scalarmult6_OBJECTS) $(scalarmult6_DEPENDENCIES) $(EXTRA_scalarmult6_DEPENDENCIES) 
	@rm -f scalarmult6$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(scalarmult6_OBJECTS) $(scalarmult6_LDADD) $(LIBS)

scalarmult7$(EXEEXT): $(scalarmult7_OBJECTS) $(scalarmult7_DEPENDENCIES) $(EXTRA_scalarmult7_DEPENDENCIES) 
	@rm -f scalarmult7$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(scalarmult7_OBJECTS) $(scalarmult7_LDADD) $(LIBS)

scalarmult8$(EXEEXT): $(scalarmult8_OBJECTS) $(scalarmult8_DEPENDENCIES) $(EXTRA_scalarmult8_DEPENDENCIES) 
	@rm -f scalarmult8$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(scalarmult8_OBJECTS) $(scalarmult8_LDADD) $(LIBS)

scalarmult_ed25519$(EXEEXT): $(scalarmult_ed25519_OBJECTS) $(scalarmult_ed25519_DEPENDENCIES) $(EXTRA_scalarmult_ed25519_DEPENDENCIES) 
	@rm -f scalarmult_ed25519$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(scalarmult_ed25519_OBJECTS) $(scalarmult_ed25519_LDADD) $(LIBS)

scalarmult_ristretto255$(EXEEXT): $(scalarmult_ristretto255_OBJECTS) $(scalarmult_ristretto255_DEPENDENCIES) $(EXTRA_scalarmult_ristretto255_DEPENDENCIES) 
	@rm -f scalarmult_ristretto255$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(scalarmult_ristretto255_OBJECTS) $(scalarmult_ristretto255_LDADD) $(LIBS)

secretbox$(EXEEXT): $(secretbox_OBJECTS) $(secretbox_DEPENDENCIES) $(EXTRA_secretbox_DEPENDENCIES) 
	@rm -f secretbox$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(secretbox_OBJECTS) $(secretbox_LDADD) $(LIBS)

secretbox2$(EXEEXT): $(secretbox2_OBJECTS) $(secretbox2_DEPENDENCIES) $(EXTRA_secretbox2_DEPENDENCIES) 
	@rm -f secretbox2$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(secretbox2_OBJECTS) $(secretbox2_LDADD) $(LIBS)

secretbox7$(EXEEXT): $(secretbox7_OBJECTS) $(secretbox7_DEPENDENCIES) $(EXTRA_secretbox7_DEPENDENCIES) 
	@rm -f secretbox7$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(secretbox7_OBJECTS) $(secretbox7_LDADD) $(LIBS)

secretbox8$(EXEEXT): $(secretbox8_OBJECTS) $(secretbox8_DEPENDENCIES) $(EXTRA_secretbox8_DEPENDENCIES) 
	@rm -f secretbox8$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(secretbox8_OBJECTS) $(secretbox8_LDADD) $(LIBS)

secretbox_easy$(EXEEXT): $(secretbox_easy_OBJECTS) $(secretbox_easy_DEPENDENCIES) $(EXTRA_secretbox_easy_DEPENDENCIES) 
	@rm -f secretbox_easy$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(secretbox_easy_OBJECTS) $(secretbox_easy_LDADD) $(LIBS)

secretbox_easy2$(EXEEXT): $(secretbox_easy2_OBJECTS) $(secretbox_easy2_DEPENDENCIES) $(EXTRA_secretbox_easy2_DEPENDENCIES) 
	@rm -f secretbox_easy2$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(secretbox_easy2_OBJECTS) $(secretbox_easy2_LDADD) $(LIBS)

secretstream$(EXEEXT): $(secretstream_OBJECTS) $(secretstream_DEPENDENCIES) $(EXTRA_secretstream_DEPENDENCIES) 
	@rm -f secretstream$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(secretstream_OBJECTS) $(secretstream_LDADD) $(LIBS)

shorthash$(EXEEXT): $(shorthash_OBJECTS) $(shorthash_DEPENDENCIES) $(EXTRA_shorthash_DEPENDENCIES) 
	@rm -f shorthash$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(shorthash_OBJECTS) $(shorthash_LDADD) $(LIBS)

sign$(EXEEXT): $(sign_OBJECTS) $(sign_DEPENDENCIES) $(EXTRA_sign_DEPENDENCIES) 
	@rm -f sign$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(sign_OBJECTS) $(sign_LDADD) $(LIBS)

siphashx24$(EXEEXT): $(siphashx24_OBJECTS) $(siphashx24_DEPENDENCIES) $(EXTRA_siphashx24_DEPENDENCIES) 
	@rm -f siphashx24$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(siphashx24_OBJECTS) $(siphashx24_LDADD) $(LIBS)

sodium_core$(EXEEXT): $(sodium_core_OBJECTS) $(sodium_core_DEPENDENCIES) $(EXTRA_sodium_core_DEPENDENCIES) 
	@rm -f sodium_core$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(sodium_core_OBJECTS) $(sodium_core_LDADD) $(LIBS)

sodium_utils$(EXEEXT): $(sodium_utils_OBJECTS) $(sodium_utils_DEPENDENCIES) $(EXTRA_sodium_utils_DEPENDENCIES) 
	@rm -f sodium_utils$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(sodium_utils_OBJECTS) $(sodium_utils_LDADD) $(LIBS)

sodium_utils2$(EXEEXT): $(sodium_utils2_OBJECTS) $(sodium_utils2_DEPENDENCIES) $(EXTRA_sodium_utils2_DEPENDENCIES) 
	@rm -f sodium_utils2$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(sodium_utils2_OBJECTS) $(sodium_utils2_LDADD) $(LIBS)

sodium_utils3$(EXEEXT): $(sodium_utils3_OBJECTS) $(sodium_utils3_DEPENDENCIES) $(EXTRA_sodium_utils3_DEPENDENCIES) 
	@rm -f sodium_utils3$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(sodium_utils3_OBJECTS) $(sodium_utils3_LDADD) $(LIBS)

sodium_version$(EXEEXT): $(sodium_version_OBJECTS) $(sodium_version_DEPENDENCIES) $(EXTRA_sodium_version_DEPENDENCIES) 
	@rm -f sodium_version$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(sodium_version_OBJECTS) $(sodium_version_LDADD) $(LIBS)

stream$(EXEEXT): $(stream_OBJECTS) $(stream_DEPENDENCIES) $(EXTRA_stream_DEPENDENCIES) 
	@rm -f stream$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(stream_OBJECTS) $(stream_LDADD) $(LIBS)

stream2$(EXEEXT): $(stream2_OBJECTS) $(stream2_DEPENDENCIES) $(EXTRA_stream2_DEPENDENCIES) 
	@rm -f stream2$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(stream2_OBJECTS) $(stream2_LDADD) $(LIBS)

stream3$(EXEEXT): $(stream3_OBJECTS) $(stream3_DEPENDENCIES) $(EXTRA_stream3_DEPENDENCIES) 
	@rm -f stream3$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(stream3_OBJECTS) $(stream3_LDADD) $(LIBS)

stream4$(EXEEXT): $(stream4_OBJECTS) $(stream4_DEPENDENCIES) $(EXTRA_stream4_DEPENDENCIES) 
	@rm -f stream4$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(stream4_OBJECTS) $(stream4_LDADD) $(LIBS)

verify1$(EXEEXT): $(verify1_OBJECTS) $(verify1_DEPENDENCIES) $(EXTRA_verify1_DEPENDENCIES) 
	@rm -f verify1$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(verify1_OBJECTS) $(verify1_LDADD) $(LIBS)

xchacha20$(EXEEXT): $(xchacha20_OBJECTS) $(xchacha20_DEPENDENCIES) $(EXTRA_xchacha20_DEPENDENCIES) 
	@rm -f xchacha20$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(xchacha20_OBJECTS) $(xchacha20_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/aead_aes256gcm.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/aead_aes256gcm2.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/aead_chacha20poly1305.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/aead_chacha20poly13052.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/aead_xchacha20poly1305.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/auth.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/auth2.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/auth3.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/auth5.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/auth6.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/auth7.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/box.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/box2.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/box7.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/box8.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/box_easy.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/box_easy2.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/box_seal.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/box_seed.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/chacha20.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/codecs.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/core1.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/core2.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/core3.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/core4.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/core5.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/core6.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/core_ed25519.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/core_ristretto255.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ed25519_convert.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/generichash.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/generichash2.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/generichash3.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hash.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hash3.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kdf.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/keygen.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kx.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/metamorphic.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/misuse.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/onetimeauth.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/onetimeauth2.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/onetimeauth7.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pwhash_argon2i.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pwhash_argon2id.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pwhash_scrypt.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pwhash_scrypt_ll.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/randombytes.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/scalarmult.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/scalarmult2.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/scalarmult5.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/scalarmult6.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/scalarmult7.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/scalarmult8.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/scalarmult_ed25519.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/scalarmult_ristretto255.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/secretbox.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/secretbox2.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/secretbox7.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/secretbox8.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/secretbox_easy.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/secretbox_easy2.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/secretstream.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/shorthash.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sign.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/siphashx24.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sodium_core.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sodium_utils.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sodium_utils2.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sodium_utils3.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sodium_version.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/stream.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/stream2.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/stream3.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/stream4.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/verify1.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/xchacha20.Po@am__quote@ # am--include-marker

$(am__depfiles_remade):
	@$(MKDIR_P) $(@D)
	@echo '# dummy' >$@-t && $(am__mv) $@-t $@

am--depfiles: $(am__depfiles_remade)

.c.o:
@am__fastdepCC_TRUE@	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCC_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c -o $@ $<

.c.obj:
@am__fastdepCC_TRUE@	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
@am__fastdepCC_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
@am__fastdepCC_TRUE@	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
@am__fastdepCC_TRUE@	$(LTCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCC_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LTCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

# Recover from deleted '.trs' file; this should ensure that
# "rm -f foo.log; make foo.trs" re-run 'foo.test', and re-create
# both 'foo.log' and 'foo.trs'.  Break the recipe in two subshells
# to avoid problems with "make -n".
.log.trs:
	rm -f $< $@
	$(MAKE) $(AM_MAKEFLAGS) $<

# Leading 'am--fnord' is there to ensure the list of targets does not
# expand to empty, as could happen e.g. with make check TESTS=''.
am--fnord $(TEST_LOGS) $(TEST_LOGS:.log=.trs): $(am__force_recheck)
am--force-recheck:
	@:

$(TEST_SUITE_LOG): $(TEST_LOGS)
	@$(am__set_TESTS_bases); \
	am__f_ok () { test -f "$$1" && test -r "$$1"; }; \
	redo_bases=`for i in $$bases; do \
	              am__f_ok $$i.trs && am__f_ok $$i.log || echo $$i; \
	            done`; \
	if test -n "$$redo_bases"; then \
	  redo_logs=`for i in $$redo_bases; do echo $$i.log; done`; \
	  redo_results=`for i in $$redo_bases; do echo $$i.trs; done`; \
	  if $(am__make_dryrun); then :; else \
	    rm -f $$redo_logs && rm -f $$redo_results || exit 1; \
	  fi; \
	fi; \
	if test -n "$$am__remaking_logs"; then \
	  echo "fatal: making $(TEST_SUITE_LOG): possible infinite" \
	       "recursion detected" >&2; \
	elif test -n "$$redo_logs"; then \
	  am__remaking_logs=yes $(MAKE) $(AM_MAKEFLAGS) $$redo_logs; \
	fi; \
	if $(am__make_dryrun); then :; else \
	  st=0;  \
	  errmsg="fatal: making $(TEST_SUITE_LOG): failed to create"; \
	  for i in $$redo_bases; do \
	    test -f $$i.trs && test -r $$i.trs \
	      || { echo "$$errmsg $$i.trs" >&2; st=1; }; \
	    test -f $$i.log && test -r $$i.log \
	      || { echo "$$errmsg $$i.log" >&2; st=1; }; \
	  done; \
	  test $$st -eq 0 || exit 1; \
	fi
	@$(am__sh_e_setup); $(am__tty_colors); $(am__set_TESTS_bases); \
	ws='[ 	]'; \
	results=`for b in $$bases; do echo $$b.trs; done`; \
	test -n "$$results" || results=/dev/null; \
	all=`  grep "^$$ws*:test-result:"           $$results | wc -l`; \
	pass=` grep "^$$ws*:test-result:$$ws*PASS"  $$results | wc -l`; \
	fail=` grep "^$$ws*:test-result:$$ws*FAIL"  $$results | wc -l`; \
	skip=` grep "^$$ws*:test-result:$$ws*SKIP"  $$results | wc -l`; \
	xfail=`grep "^$$ws*:test-result:$$ws*XFAIL" $$results | wc -l`; \
	xpass=`grep "^$$ws*:test-result:$$ws*XPASS" $$results | wc -l`; \
	error=`grep "^$$ws*:test-result:$$ws*ERROR" $$results | wc -l`; \
	if test `expr $$fail + $$xpass + $$error` -eq 0; then \
	  success=true; \
	else \
	  success=false; \
	fi; \
	br='==================='; br=$$br$$br$$br$$br; \
	result_count () \
	{ \
	    if test x"$$1" = x"--maybe-color"; then \
	      maybe_colorize=yes; \
	    elif test x"$$1" = x"--no-color"; then \
	      maybe_colorize=no; \
	    else \
	      echo "$@: invalid 'result_count' usage" >&2; exit 4; \
	    fi; \
	    shift; \
	    desc=$$1 count=$$2; \
	    if test $$maybe_colorize = yes && test $$count -gt 0; then \
	      color_start=$$3 color_end=$$std; \
	    else \
	      color_start= color_end=; \
	    fi; \
	    echo "$${color_start}# $$desc $$count$${color_end}"; \
	}; \
	create_testsuite_report () \
	{ \
	  result_count $$1 "TOTAL:" $$all   "$$brg"; \
	  result_count $$1 "PASS: " $$pass  "$$grn"; \
	  result_count $$1 "SKIP: " $$skip  "$$blu"; \
	  result_count $$1 "XFAIL:" $$xfail "$$lgn"; \
	  result_count $$1 "FAIL: " $$fail  "$$red"; \
	  result_count $$1 "XPASS:" $$xpass "$$red"; \
	  result_count $$1 "ERROR:" $$error "$$mgn"; \
	}; \
	{								\
	  echo "$(PACKAGE_STRING): $(subdir)/$(TEST_SUITE_LOG)" |	\
	    $(am__rst_title);						\
	  create_testsuite_report --no-color;				\
	  echo;								\
	  echo ".. contents:: :depth: 2";				\
	  echo;								\
	  for b in $$bases; do echo $$b; done				\
	    | $(am__create_global_log);					\
	} >$(TEST_SUITE_LOG).tmp || exit 1;				\
	mv $(TEST_SUITE_LOG).tmp $(TEST_SUITE_LOG);			\
	if $$success; then						\
	  col="$$grn";							\
	 else								\
	  col="$$red";							\
	  test x"$$VERBOSE" = x || cat $(TEST_SUITE_LOG);		\
	fi;								\
	echo "$${col}$$br$${std}"; 					\
	echo "$${col}Testsuite summary"$(AM_TESTSUITE_SUMMARY_HEADER)"$${std}";	\
	echo "$${col}$$br$${std}"; 					\
	create_testsuite_report --maybe-color;				\
	echo "$$col$$br$$std";						\
	if $$success; then :; else					\
	  echo "$${col}See $(subdir)/$(TEST_SUITE_LOG)$${std}";		\
	  if test -n "$(PACKAGE_BUGREPORT)"; then			\
	    echo "$${col}Please report to $(PACKAGE_BUGREPORT)$${std}";	\
	  fi;								\
	  echo "$$col$$br$$std";					\
	fi;								\
	$$success || exit 1

check-TESTS: $(check_PROGRAMS)
	@list='$(RECHECK_LOGS)';           test -z "$$list" || rm -f $$list
	@list='$(RECHECK_LOGS:.log=.trs)'; test -z "$$list" || rm -f $$list
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	trs_list=`for i in $$bases; do echo $$i.trs; done`; \
	log_list=`echo $$log_list`; trs_list=`echo $$trs_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) TEST_LOGS="$$log_list"; \
	exit $$?;
recheck: all $(check_PROGRAMS)
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	bases=`for i in $$bases; do echo $$i; done \
	         | $(am__list_recheck_tests)` || exit 1; \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	log_list=`echo $$log_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) \
	        am__force_recheck=am--force-recheck \
	        TEST_LOGS="$$log_list"; \
	exit $$?
aead_aes256gcm.log: aead_aes256gcm$(EXEEXT)
	@p='aead_aes256gcm$(EXEEXT)'; \
	b='aead_aes256gcm'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
aead_aes256gcm2.log: aead_aes256gcm2$(EXEEXT)
	@p='aead_aes256gcm2$(EXEEXT)'; \
	b='aead_aes256gcm2'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
aead_chacha20poly1305.log: aead_chacha20poly1305$(EXEEXT)
	@p='aead_chacha20poly1305$(EXEEXT)'; \
	b='aead_chacha20poly1305'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
aead_chacha20poly13052.log: aead_chacha20poly13052$(EXEEXT)
	@p='aead_chacha20poly13052$(EXEEXT)'; \
	b='aead_chacha20poly13052'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
aead_xchacha20poly1305.log: aead_xchacha20poly1305$(EXEEXT)
	@p='aead_xchacha20poly1305$(EXEEXT)'; \
	b='aead_xchacha20poly1305'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
auth.log: auth$(EXEEXT)
	@p='auth$(EXEEXT)'; \
	b='auth'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
auth2.log: auth2$(EXEEXT)
	@p='auth2$(EXEEXT)'; \
	b='auth2'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
auth3.log: auth3$(EXEEXT)
	@p='auth3$(EXEEXT)'; \
	b='auth3'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
auth5.log: auth5$(EXEEXT)
	@p='auth5$(EXEEXT)'; \
	b='auth5'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
auth6.log: auth6$(EXEEXT)
	@p='auth6$(EXEEXT)'; \
	b='auth6'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
auth7.log: auth7$(EXEEXT)
	@p='auth7$(EXEEXT)'; \
	b='auth7'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
box.log: box$(EXEEXT)
	@p='box$(EXEEXT)'; \
	b='box'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
box2.log: box2$(EXEEXT)
	@p='box2$(EXEEXT)'; \
	b='box2'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
box7.log: box7$(EXEEXT)
	@p='box7$(EXEEXT)'; \
	b='box7'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
box8.log: box8$(EXEEXT)
	@p='box8$(EXEEXT)'; \
	b='box8'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
box_easy.log: box_easy$(EXEEXT)
	@p='box_easy$(EXEEXT)'; \
	b='box_easy'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
box_easy2.log: box_easy2$(EXEEXT)
	@p='box_easy2$(EXEEXT)'; \
	b='box_easy2'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
box_seal.log: box_seal$(EXEEXT)
	@p='box_seal$(EXEEXT)'; \
	b='box_seal'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
box_seed.log: box_seed$(EXEEXT)
	@p='box_seed$(EXEEXT)'; \
	b='box_seed'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
chacha20.log: chacha20$(EXEEXT)
	@p='chacha20$(EXEEXT)'; \
	b='chacha20'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
codecs.log: codecs$(EXEEXT)
	@p='codecs$(EXEEXT)'; \
	b='codecs'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
core1.log: core1$(EXEEXT)
	@p='core1$(EXEEXT)'; \
	b='core1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
core2.log: core2$(EXEEXT)
	@p='core2$(EXEEXT)'; \
	b='core2'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
core3.log: core3$(EXEEXT)
	@p='core3$(EXEEXT)'; \
	b='core3'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
core4.log: core4$(EXEEXT)
	@p='core4$(EXEEXT)'; \
	b='core4'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
core5.log: core5$(EXEEXT)
	@p='core5$(EXEEXT)'; \
	b='core5'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
core6.log: core6$(EXEEXT)
	@p='core6$(EXEEXT)'; \
	b='core6'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
ed25519_convert.log: ed25519_convert$(EXEEXT)
	@p='ed25519_convert$(EXEEXT)'; \
	b='ed25519_convert'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
generichash.log: generichash$(EXEEXT)
	@p='generichash$(EXEEXT)'; \
	b='generichash'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
generichash2.log: generichash2$(EXEEXT)
	@p='generichash2$(EXEEXT)'; \
	b='generichash2'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
generichash3.log: generichash3$(EXEEXT)
	@p='generichash3$(EXEEXT)'; \
	b='generichash3'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
hash.log: hash$(EXEEXT)
	@p='hash$(EXEEXT)'; \
	b='hash'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
hash3.log: hash3$(EXEEXT)
	@p='hash3$(EXEEXT)'; \
	b='hash3'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
kdf.log: kdf$(EXEEXT)
	@p='kdf$(EXEEXT)'; \
	b='kdf'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
keygen.log: keygen$(EXEEXT)
	@p='keygen$(EXEEXT)'; \
	b='keygen'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
kx.log: kx$(EXEEXT)
	@p='kx$(EXEEXT)'; \
	b='kx'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
metamorphic.log: metamorphic$(EXEEXT)
	@p='metamorphic$(EXEEXT)'; \
	b='metamorphic'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
misuse.log: misuse$(EXEEXT)
	@p='misuse$(EXEEXT)'; \
	b='misuse'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
onetimeauth.log: onetimeauth$(EXEEXT)
	@p='onetimeauth$(EXEEXT)'; \
	b='onetimeauth'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
onetimeauth2.log: onetimeauth2$(EXEEXT)
	@p='onetimeauth2$(EXEEXT)'; \
	b='onetimeauth2'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
onetimeauth7.log: onetimeauth7$(EXEEXT)
	@p='onetimeauth7$(EXEEXT)'; \
	b='onetimeauth7'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
pwhash_argon2i.log: pwhash_argon2i$(EXEEXT)
	@p='pwhash_argon2i$(EXEEXT)'; \
	b='pwhash_argon2i'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
pwhash_argon2id.log: pwhash_argon2id$(EXEEXT)
	@p='pwhash_argon2id$(EXEEXT)'; \
	b='pwhash_argon2id'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
randombytes.log: randombytes$(EXEEXT)
	@p='randombytes$(EXEEXT)'; \
	b='randombytes'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
scalarmult.log: scalarmult$(EXEEXT)
	@p='scalarmult$(EXEEXT)'; \
	b='scalarmult'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
scalarmult2.log: scalarmult2$(EXEEXT)
	@p='scalarmult2$(EXEEXT)'; \
	b='scalarmult2'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
scalarmult5.log: scalarmult5$(EXEEXT)
	@p='scalarmult5$(EXEEXT)'; \
	b='scalarmult5'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
scalarmult6.log: scalarmult6$(EXEEXT)
	@p='scalarmult6$(EXEEXT)'; \
	b='scalarmult6'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
scalarmult7.log: scalarmult7$(EXEEXT)
	@p='scalarmult7$(EXEEXT)'; \
	b='scalarmult7'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
scalarmult8.log: scalarmult8$(EXEEXT)
	@p='scalarmult8$(EXEEXT)'; \
	b='scalarmult8'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
secretbox.log: secretbox$(EXEEXT)
	@p='secretbox$(EXEEXT)'; \
	b='secretbox'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
secretbox2.log: secretbox2$(EXEEXT)
	@p='secretbox2$(EXEEXT)'; \
	b='secretbox2'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
secretbox7.log: secretbox7$(EXEEXT)
	@p='secretbox7$(EXEEXT)'; \
	b='secretbox7'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
secretbox8.log: secretbox8$(EXEEXT)
	@p='secretbox8$(EXEEXT)'; \
	b='secretbox8'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
secretbox_easy.log: secretbox_easy$(EXEEXT)
	@p='secretbox_easy$(EXEEXT)'; \
	b='secretbox_easy'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
secretbox_easy2.log: secretbox_easy2$(EXEEXT)
	@p='secretbox_easy2$(EXEEXT)'; \
	b='secretbox_easy2'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
secretstream.log: secretstream$(EXEEXT)
	@p='secretstream$(EXEEXT)'; \
	b='secretstream'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
shorthash.log: shorthash$(EXEEXT)
	@p='shorthash$(EXEEXT)'; \
	b='shorthash'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
sign.log: sign$(EXEEXT)
	@p='sign$(EXEEXT)'; \
	b='sign'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
sodium_core.log: sodium_core$(EXEEXT)
	@p='sodium_core$(EXEEXT)'; \
	b='sodium_core'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
sodium_utils.log: sodium_utils$(EXEEXT)
	@p='sodium_utils$(EXEEXT)'; \
	b='sodium_utils'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
sodium_version.log: sodium_version$(EXEEXT)
	@p='sodium_version$(EXEEXT)'; \
	b='sodium_version'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
stream.log: stream$(EXEEXT)
	@p='stream$(EXEEXT)'; \
	b='stream'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
stream2.log: stream2$(EXEEXT)
	@p='stream2$(EXEEXT)'; \
	b='stream2'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
stream3.log: stream3$(EXEEXT)
	@p='stream3$(EXEEXT)'; \
	b='stream3'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
stream4.log: stream4$(EXEEXT)
	@p='stream4$(EXEEXT)'; \
	b='stream4'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
verify1.log: verify1$(EXEEXT)
	@p='verify1$(EXEEXT)'; \
	b='verify1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
sodium_utils2.log: sodium_utils2$(EXEEXT)
	@p='sodium_utils2$(EXEEXT)'; \
	b='sodium_utils2'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
sodium_utils3.log: sodium_utils3$(EXEEXT)
	@p='sodium_utils3$(EXEEXT)'; \
	b='sodium_utils3'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
core_ed25519.log: core_ed25519$(EXEEXT)
	@p='core_ed25519$(EXEEXT)'; \
	b='core_ed25519'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
core_ristretto255.log: core_ristretto255$(EXEEXT)
	@p='core_ristretto255$(EXEEXT)'; \
	b='core_ristretto255'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
pwhash_scrypt.log: pwhash_scrypt$(EXEEXT)
	@p='pwhash_scrypt$(EXEEXT)'; \
	b='pwhash_scrypt'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
pwhash_scrypt_ll.log: pwhash_scrypt_ll$(EXEEXT)
	@p='pwhash_scrypt_ll$(EXEEXT)'; \
	b='pwhash_scrypt_ll'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
scalarmult_ed25519.log: scalarmult_ed25519$(EXEEXT)
	@p='scalarmult_ed25519$(EXEEXT)'; \
	b='scalarmult_ed25519'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
scalarmult_ristretto255.log: scalarmult_ristretto255$(EXEEXT)
	@p='scalarmult_ristretto255$(EXEEXT)'; \
	b='scalarmult_ristretto255'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
siphashx24.log: siphashx24$(EXEEXT)
	@p='siphashx24$(EXEEXT)'; \
	b='siphashx24'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
xchacha20.log: xchacha20$(EXEEXT)
	@p='xchacha20$(EXEEXT)'; \
	b='xchacha20'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
.test.log:
	@p='$<'; \
	$(am__set_b); \
	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
@am__EXEEXT_TRUE@.test$(EXEEXT).log:
@am__EXEEXT_TRUE@	@p='$<'; \
@am__EXEEXT_TRUE@	$(am__set_b); \
@am__EXEEXT_TRUE@	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
@am__EXEEXT_TRUE@	--log-file $$b.log --trs-file $$b.trs \
@am__EXEEXT_TRUE@	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
@am__EXEEXT_TRUE@	"$$tst" $(AM_TESTS_FD_REDIRECT)
distdir: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) distdir-am

distdir-am: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
all-am: Makefile
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:
	-test -z "$(TEST_LOGS)" || rm -f $(TEST_LOGS)
	-test -z "$(TEST_LOGS:.log=.trs)" || rm -f $(TEST_LOGS:.log=.trs)
	-test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-checkPROGRAMS clean-generic clean-libtool \
	mostlyclean-am

distclean: distclean-am
		-rm -f ./$(DEPDIR)/aead_aes256gcm.Po
	-rm -f ./$(DEPDIR)/aead_aes256gcm2.Po
	-rm -f ./$(DEPDIR)/aead_chacha20poly1305.Po
	-rm -f ./$(DEPDIR)/aead_chacha20poly13052.Po
	-rm -f ./$(DEPDIR)/aead_xchacha20poly1305.Po
	-rm -f ./$(DEPDIR)/auth.Po
	-rm -f ./$(DEPDIR)/auth2.Po
	-rm -f ./$(DEPDIR)/auth3.Po
	-rm -f ./$(DEPDIR)/auth5.Po
	-rm -f ./$(DEPDIR)/auth6.Po
	-rm -f ./$(DEPDIR)/auth7.Po
	-rm -f ./$(DEPDIR)/box.Po
	-rm -f ./$(DEPDIR)/box2.Po
	-rm -f ./$(DEPDIR)/box7.Po
	-rm -f ./$(DEPDIR)/box8.Po
	-rm -f ./$(DEPDIR)/box_easy.Po
	-rm -f ./$(DEPDIR)/box_easy2.Po
	-rm -f ./$(DEPDIR)/box_seal.Po
	-rm -f ./$(DEPDIR)/box_seed.Po
	-rm -f ./$(DEPDIR)/chacha20.Po
	-rm -f ./$(DEPDIR)/codecs.Po
	-rm -f ./$(DEPDIR)/core1.Po
	-rm -f ./$(DEPDIR)/core2.Po
	-rm -f ./$(DEPDIR)/core3.Po
	-rm -f ./$(DEPDIR)/core4.Po
	-rm -f ./$(DEPDIR)/core5.Po
	-rm -f ./$(DEPDIR)/core6.Po
	-rm -f ./$(DEPDIR)/core_ed25519.Po
	-rm -f ./$(DEPDIR)/core_ristretto255.Po
	-rm -f ./$(DEPDIR)/ed25519_convert.Po
	-rm -f ./$(DEPDIR)/generichash.Po
	-rm -f ./$(DEPDIR)/generichash2.Po
	-rm -f ./$(DEPDIR)/generichash3.Po
	-rm -f ./$(DEPDIR)/hash.Po
	-rm -f ./$(DEPDIR)/hash3.Po
	-rm -f ./$(DEPDIR)/kdf.Po
	-rm -f ./$(DEPDIR)/keygen.Po
	-rm -f ./$(DEPDIR)/kx.Po
	-rm -f ./$(DEPDIR)/metamorphic.Po
	-rm -f ./$(DEPDIR)/misuse.Po
	-rm -f ./$(DEPDIR)/onetimeauth.Po
	-rm -f ./$(DEPDIR)/onetimeauth2.Po
	-rm -f ./$(DEPDIR)/onetimeauth7.Po
	-rm -f ./$(DEPDIR)/pwhash_argon2i.Po
	-rm -f ./$(DEPDIR)/pwhash_argon2id.Po
	-rm -f ./$(DEPDIR)/pwhash_scrypt.Po
	-rm -f ./$(DEPDIR)/pwhash_scrypt_ll.Po
	-rm -f ./$(DEPDIR)/randombytes.Po
	-rm -f ./$(DEPDIR)/scalarmult.Po
	-rm -f ./$(DEPDIR)/scalarmult2.Po
	-rm -f ./$(DEPDIR)/scalarmult5.Po
	-rm -f ./$(DEPDIR)/scalarmult6.Po
	-rm -f ./$(DEPDIR)/scalarmult7.Po
	-rm -f ./$(DEPDIR)/scalarmult8.Po
	-rm -f ./$(DEPDIR)/scalarmult_ed25519.Po
	-rm -f ./$(DEPDIR)/scalarmult_ristretto255.Po
	-rm -f ./$(DEPDIR)/secretbox.Po
	-rm -f ./$(DEPDIR)/secretbox2.Po
	-rm -f ./$(DEPDIR)/secretbox7.Po
	-rm -f ./$(DEPDIR)/secretbox8.Po
	-rm -f ./$(DEPDIR)/secretbox_easy.Po
	-rm -f ./$(DEPDIR)/secretbox_easy2.Po
	-rm -f ./$(DEPDIR)/secretstream.Po
	-rm -f ./$(DEPDIR)/shorthash.Po
	-rm -f ./$(DEPDIR)/sign.Po
	-rm -f ./$(DEPDIR)/siphashx24.Po
	-rm -f ./$(DEPDIR)/sodium_core.Po
	-rm -f ./$(DEPDIR)/sodium_utils.Po
	-rm -f ./$(DEPDIR)/sodium_utils2.Po
	-rm -f ./$(DEPDIR)/sodium_utils3.Po
	-rm -f ./$(DEPDIR)/sodium_version.Po
	-rm -f ./$(DEPDIR)/stream.Po
	-rm -f ./$(DEPDIR)/stream2.Po
	-rm -f ./$(DEPDIR)/stream3.Po
	-rm -f ./$(DEPDIR)/stream4.Po
	-rm -f ./$(DEPDIR)/verify1.Po
	-rm -f ./$(DEPDIR)/xchacha20.Po
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
		-rm -f ./$(DEPDIR)/aead_aes256gcm.Po
	-rm -f ./$(DEPDIR)/aead_aes256gcm2.Po
	-rm -f ./$(DEPDIR)/aead_chacha20poly1305.Po
	-rm -f ./$(DEPDIR)/aead_chacha20poly13052.Po
	-rm -f ./$(DEPDIR)/aead_xchacha20poly1305.Po
	-rm -f ./$(DEPDIR)/auth.Po
	-rm -f ./$(DEPDIR)/auth2.Po
	-rm -f ./$(DEPDIR)/auth3.Po
	-rm -f ./$(DEPDIR)/auth5.Po
	-rm -f ./$(DEPDIR)/auth6.Po
	-rm -f ./$(DEPDIR)/auth7.Po
	-rm -f ./$(DEPDIR)/box.Po
	-rm -f ./$(DEPDIR)/box2.Po
	-rm -f ./$(DEPDIR)/box7.Po
	-rm -f ./$(DEPDIR)/box8.Po
	-rm -f ./$(DEPDIR)/box_easy.Po
	-rm -f ./$(DEPDIR)/box_easy2.Po
	-rm -f ./$(DEPDIR)/box_seal.Po
	-rm -f ./$(DEPDIR)/box_seed.Po
	-rm -f ./$(DEPDIR)/chacha20.Po
	-rm -f ./$(DEPDIR)/codecs.Po
	-rm -f ./$(DEPDIR)/core1.Po
	-rm -f ./$(DEPDIR)/core2.Po
	-rm -f ./$(DEPDIR)/core3.Po
	-rm -f ./$(DEPDIR)/core4.Po
	-rm -f ./$(DEPDIR)/core5.Po
	-rm -f ./$(DEPDIR)/core6.Po
	-rm -f ./$(DEPDIR)/core_ed25519.Po
	-rm -f ./$(DEPDIR)/core_ristretto255.Po
	-rm -f ./$(DEPDIR)/ed25519_convert.Po
	-rm -f ./$(DEPDIR)/generichash.Po
	-rm -f ./$(DEPDIR)/generichash2.Po
	-rm -f ./$(DEPDIR)/generichash3.Po
	-rm -f ./$(DEPDIR)/hash.Po
	-rm -f ./$(DEPDIR)/hash3.Po
	-rm -f ./$(DEPDIR)/kdf.Po
	-rm -f ./$(DEPDIR)/keygen.Po
	-rm -f ./$(DEPDIR)/kx.Po
	-rm -f ./$(DEPDIR)/metamorphic.Po
	-rm -f ./$(DEPDIR)/misuse.Po
	-rm -f ./$(DEPDIR)/onetimeauth.Po
	-rm -f ./$(DEPDIR)/onetimeauth2.Po
	-rm -f ./$(DEPDIR)/onetimeauth7.Po
	-rm -f ./$(DEPDIR)/pwhash_argon2i.Po
	-rm -f ./$(DEPDIR)/pwhash_argon2id.Po
	-rm -f ./$(DEPDIR)/pwhash_scrypt.Po
	-rm -f ./$(DEPDIR)/pwhash_scrypt_ll.Po
	-rm -f ./$(DEPDIR)/randombytes.Po
	-rm -f ./$(DEPDIR)/scalarmult.Po
	-rm -f ./$(DEPDIR)/scalarmult2.Po
	-rm -f ./$(DEPDIR)/scalarmult5.Po
	-rm -f ./$(DEPDIR)/scalarmult6.Po
	-rm -f ./$(DEPDIR)/scalarmult7.Po
	-rm -f ./$(DEPDIR)/scalarmult8.Po
	-rm -f ./$(DEPDIR)/scalarmult_ed25519.Po
	-rm -f ./$(DEPDIR)/scalarmult_ristretto255.Po
	-rm -f ./$(DEPDIR)/secretbox.Po
	-rm -f ./$(DEPDIR)/secretbox2.Po
	-rm -f ./$(DEPDIR)/secretbox7.Po
	-rm -f ./$(DEPDIR)/secretbox8.Po
	-rm -f ./$(DEPDIR)/secretbox_easy.Po
	-rm -f ./$(DEPDIR)/secretbox_easy2.Po
	-rm -f ./$(DEPDIR)/secretstream.Po
	-rm -f ./$(DEPDIR)/shorthash.Po
	-rm -f ./$(DEPDIR)/sign.Po
	-rm -f ./$(DEPDIR)/siphashx24.Po
	-rm -f ./$(DEPDIR)/sodium_core.Po
	-rm -f ./$(DEPDIR)/sodium_utils.Po
	-rm -f ./$(DEPDIR)/sodium_utils2.Po
	-rm -f ./$(DEPDIR)/sodium_utils3.Po
	-rm -f ./$(DEPDIR)/sodium_version.Po
	-rm -f ./$(DEPDIR)/stream.Po
	-rm -f ./$(DEPDIR)/stream2.Po
	-rm -f ./$(DEPDIR)/stream3.Po
	-rm -f ./$(DEPDIR)/stream4.Po
	-rm -f ./$(DEPDIR)/verify1.Po
	-rm -f ./$(DEPDIR)/xchacha20.Po
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: check-am install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am am--depfiles check check-TESTS \
	check-am clean clean-checkPROGRAMS clean-generic clean-libtool \
	cscopelist-am ctags ctags-am distclean distclean-compile \
	distclean-generic distclean-libtool distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	recheck tags tags-am uninstall uninstall-am

.PRECIOUS: Makefile


verify: check

@VALGRIND_CHECK_RULES@

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
